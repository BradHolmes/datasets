/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1TaxonomyMetadataResponse struct for V1TaxonomyMetadataResponse
type V1TaxonomyMetadataResponse struct {
	Messages *[]V1Message `json:"messages,omitempty"`
	TaxonomyNodes *[]V1TaxonomyMatch `json:"taxonomy_nodes,omitempty"`
}

// NewV1TaxonomyMetadataResponse instantiates a new V1TaxonomyMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TaxonomyMetadataResponse() *V1TaxonomyMetadataResponse {
	this := V1TaxonomyMetadataResponse{}
	return &this
}

// NewV1TaxonomyMetadataResponseWithDefaults instantiates a new V1TaxonomyMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TaxonomyMetadataResponseWithDefaults() *V1TaxonomyMetadataResponse {
	this := V1TaxonomyMetadataResponse{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *V1TaxonomyMetadataResponse) GetMessages() []V1Message {
	if o == nil || o.Messages == nil {
		var ret []V1Message
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxonomyMetadataResponse) GetMessagesOk() (*[]V1Message, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *V1TaxonomyMetadataResponse) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []V1Message and assigns it to the Messages field.
func (o *V1TaxonomyMetadataResponse) SetMessages(v []V1Message) {
	o.Messages = &v
}

// GetTaxonomyNodes returns the TaxonomyNodes field value if set, zero value otherwise.
func (o *V1TaxonomyMetadataResponse) GetTaxonomyNodes() []V1TaxonomyMatch {
	if o == nil || o.TaxonomyNodes == nil {
		var ret []V1TaxonomyMatch
		return ret
	}
	return *o.TaxonomyNodes
}

// GetTaxonomyNodesOk returns a tuple with the TaxonomyNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxonomyMetadataResponse) GetTaxonomyNodesOk() (*[]V1TaxonomyMatch, bool) {
	if o == nil || o.TaxonomyNodes == nil {
		return nil, false
	}
	return o.TaxonomyNodes, true
}

// HasTaxonomyNodes returns a boolean if a field has been set.
func (o *V1TaxonomyMetadataResponse) HasTaxonomyNodes() bool {
	if o != nil && o.TaxonomyNodes != nil {
		return true
	}

	return false
}

// SetTaxonomyNodes gets a reference to the given []V1TaxonomyMatch and assigns it to the TaxonomyNodes field.
func (o *V1TaxonomyMetadataResponse) SetTaxonomyNodes(v []V1TaxonomyMatch) {
	o.TaxonomyNodes = &v
}

func (o V1TaxonomyMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Messages != nil && len(o.GetMessages()) > 0  {
		toSerialize["messages"] = o.Messages
	}
	if o.TaxonomyNodes != nil && len(o.GetTaxonomyNodes()) > 0  {
		toSerialize["taxonomy_nodes"] = o.TaxonomyNodes
	}
	return json.Marshal(toSerialize)
}

type NullableV1TaxonomyMetadataResponse struct {
	value *V1TaxonomyMetadataResponse
	isSet bool
}

func (v NullableV1TaxonomyMetadataResponse) Get() *V1TaxonomyMetadataResponse {
	return v.value
}

func (v *NullableV1TaxonomyMetadataResponse) Set(val *V1TaxonomyMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TaxonomyMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TaxonomyMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TaxonomyMetadataResponse(val *V1TaxonomyMetadataResponse) *NullableV1TaxonomyMetadataResponse {
	return &NullableV1TaxonomyMetadataResponse{value: val, isSet: true}
}

func (v NullableV1TaxonomyMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TaxonomyMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



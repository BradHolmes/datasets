/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1GeneGroup struct for V1GeneGroup
type V1GeneGroup struct {
	Id *string `json:"id,omitempty"`
	Method *string `json:"method,omitempty"`
}

// NewV1GeneGroup instantiates a new V1GeneGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GeneGroup() *V1GeneGroup {
	this := V1GeneGroup{}
	return &this
}

// NewV1GeneGroupWithDefaults instantiates a new V1GeneGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GeneGroupWithDefaults() *V1GeneGroup {
	this := V1GeneGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1GeneGroup) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneGroup) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1GeneGroup) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1GeneGroup) SetId(v string) {
	o.Id = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *V1GeneGroup) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneGroup) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *V1GeneGroup) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *V1GeneGroup) SetMethod(v string) {
	o.Method = &v
}

func (o V1GeneGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil  {
		toSerialize["id"] = o.Id
	}
	if o.Method != nil  {
		toSerialize["method"] = o.Method
	}
	return json.Marshal(toSerialize)
}

type NullableV1GeneGroup struct {
	value *V1GeneGroup
	isSet bool
}

func (v NullableV1GeneGroup) Get() *V1GeneGroup {
	return v.value
}

func (v *NullableV1GeneGroup) Set(val *V1GeneGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GeneGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GeneGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GeneGroup(val *V1GeneGroup) *NullableV1GeneGroup {
	return &NullableV1GeneGroup{value: val, isSet: true}
}

func (v NullableV1GeneGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GeneGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 1 API is considred stable and will not be subject to breaking changes. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1TaxonomyFilteredSubtreeRequest struct for V1TaxonomyFilteredSubtreeRequest
type V1TaxonomyFilteredSubtreeRequest struct {
	Taxons *[]string `json:"taxons,omitempty"`
	SpecifiedLimit *bool `json:"specified_limit,omitempty"`
	RankLimits *[]V1OrganismRankType `json:"rank_limits,omitempty"`
}

// NewV1TaxonomyFilteredSubtreeRequest instantiates a new V1TaxonomyFilteredSubtreeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TaxonomyFilteredSubtreeRequest() *V1TaxonomyFilteredSubtreeRequest {
	this := V1TaxonomyFilteredSubtreeRequest{}
	return &this
}

// NewV1TaxonomyFilteredSubtreeRequestWithDefaults instantiates a new V1TaxonomyFilteredSubtreeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TaxonomyFilteredSubtreeRequestWithDefaults() *V1TaxonomyFilteredSubtreeRequest {
	this := V1TaxonomyFilteredSubtreeRequest{}
	return &this
}

// GetTaxons returns the Taxons field value if set, zero value otherwise.
func (o *V1TaxonomyFilteredSubtreeRequest) GetTaxons() []string {
	if o == nil || o.Taxons == nil {
		var ret []string
		return ret
	}
	return *o.Taxons
}

// GetTaxonsOk returns a tuple with the Taxons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxonomyFilteredSubtreeRequest) GetTaxonsOk() (*[]string, bool) {
	if o == nil || o.Taxons == nil {
		return nil, false
	}
	return o.Taxons, true
}

// HasTaxons returns a boolean if a field has been set.
func (o *V1TaxonomyFilteredSubtreeRequest) HasTaxons() bool {
	if o != nil && o.Taxons != nil {
		return true
	}

	return false
}

// SetTaxons gets a reference to the given []string and assigns it to the Taxons field.
func (o *V1TaxonomyFilteredSubtreeRequest) SetTaxons(v []string) {
	o.Taxons = &v
}

// GetSpecifiedLimit returns the SpecifiedLimit field value if set, zero value otherwise.
func (o *V1TaxonomyFilteredSubtreeRequest) GetSpecifiedLimit() bool {
	if o == nil || o.SpecifiedLimit == nil {
		var ret bool
		return ret
	}
	return *o.SpecifiedLimit
}

// GetSpecifiedLimitOk returns a tuple with the SpecifiedLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxonomyFilteredSubtreeRequest) GetSpecifiedLimitOk() (*bool, bool) {
	if o == nil || o.SpecifiedLimit == nil {
		return nil, false
	}
	return o.SpecifiedLimit, true
}

// HasSpecifiedLimit returns a boolean if a field has been set.
func (o *V1TaxonomyFilteredSubtreeRequest) HasSpecifiedLimit() bool {
	if o != nil && o.SpecifiedLimit != nil {
		return true
	}

	return false
}

// SetSpecifiedLimit gets a reference to the given bool and assigns it to the SpecifiedLimit field.
func (o *V1TaxonomyFilteredSubtreeRequest) SetSpecifiedLimit(v bool) {
	o.SpecifiedLimit = &v
}

// GetRankLimits returns the RankLimits field value if set, zero value otherwise.
func (o *V1TaxonomyFilteredSubtreeRequest) GetRankLimits() []V1OrganismRankType {
	if o == nil || o.RankLimits == nil {
		var ret []V1OrganismRankType
		return ret
	}
	return *o.RankLimits
}

// GetRankLimitsOk returns a tuple with the RankLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxonomyFilteredSubtreeRequest) GetRankLimitsOk() (*[]V1OrganismRankType, bool) {
	if o == nil || o.RankLimits == nil {
		return nil, false
	}
	return o.RankLimits, true
}

// HasRankLimits returns a boolean if a field has been set.
func (o *V1TaxonomyFilteredSubtreeRequest) HasRankLimits() bool {
	if o != nil && o.RankLimits != nil {
		return true
	}

	return false
}

// SetRankLimits gets a reference to the given []V1OrganismRankType and assigns it to the RankLimits field.
func (o *V1TaxonomyFilteredSubtreeRequest) SetRankLimits(v []V1OrganismRankType) {
	o.RankLimits = &v
}

func (o V1TaxonomyFilteredSubtreeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Taxons != nil && len(o.GetTaxons()) > 0  {
		toSerialize["taxons"] = o.Taxons
	}
	if o.SpecifiedLimit != nil  {
		toSerialize["specified_limit"] = o.SpecifiedLimit
	}
	if o.RankLimits != nil && len(o.GetRankLimits()) > 0  {
		toSerialize["rank_limits"] = o.RankLimits
	}
	return json.Marshal(toSerialize)
}

type NullableV1TaxonomyFilteredSubtreeRequest struct {
	value *V1TaxonomyFilteredSubtreeRequest
	isSet bool
}

func (v NullableV1TaxonomyFilteredSubtreeRequest) Get() *V1TaxonomyFilteredSubtreeRequest {
	return v.value
}

func (v *NullableV1TaxonomyFilteredSubtreeRequest) Set(val *V1TaxonomyFilteredSubtreeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TaxonomyFilteredSubtreeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TaxonomyFilteredSubtreeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TaxonomyFilteredSubtreeRequest(val *V1TaxonomyFilteredSubtreeRequest) *NullableV1TaxonomyFilteredSubtreeRequest {
	return &NullableV1TaxonomyFilteredSubtreeRequest{value: val, isSet: true}
}

func (v NullableV1TaxonomyFilteredSubtreeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TaxonomyFilteredSubtreeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



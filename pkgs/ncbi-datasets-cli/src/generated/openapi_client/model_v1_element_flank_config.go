/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1ElementFlankConfig struct for V1ElementFlankConfig
type V1ElementFlankConfig struct {
	Length *int32 `json:"length,omitempty"`
}

// NewV1ElementFlankConfig instantiates a new V1ElementFlankConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ElementFlankConfig() *V1ElementFlankConfig {
	this := V1ElementFlankConfig{}
	return &this
}

// NewV1ElementFlankConfigWithDefaults instantiates a new V1ElementFlankConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ElementFlankConfigWithDefaults() *V1ElementFlankConfig {
	this := V1ElementFlankConfig{}
	return &this
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *V1ElementFlankConfig) GetLength() int32 {
	if o == nil || o.Length == nil {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ElementFlankConfig) GetLengthOk() (*int32, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *V1ElementFlankConfig) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
func (o *V1ElementFlankConfig) SetLength(v int32) {
	o.Length = &v
}

func (o V1ElementFlankConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Length != nil  {
		toSerialize["length"] = o.Length
	}
	return json.Marshal(toSerialize)
}

type NullableV1ElementFlankConfig struct {
	value *V1ElementFlankConfig
	isSet bool
}

func (v NullableV1ElementFlankConfig) Get() *V1ElementFlankConfig {
	return v.value
}

func (v *NullableV1ElementFlankConfig) Set(val *V1ElementFlankConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ElementFlankConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ElementFlankConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ElementFlankConfig(val *V1ElementFlankConfig) *NullableV1ElementFlankConfig {
	return &NullableV1ElementFlankConfig{value: val, isSet: true}
}

func (v NullableV1ElementFlankConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ElementFlankConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



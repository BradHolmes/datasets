/*
 * NCBI Datasets API
 *
 * ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
	"time"
)

// V1DownloadSummary struct for V1DownloadSummary
type V1DownloadSummary struct {
	RecordCount *int32 `json:"record_count,omitempty"`
	AssemblyCount *int32 `json:"assembly_count,omitempty"`
	ResourceUpdatedOn *time.Time `json:"resource_updated_on,omitempty"`
	Hydrated *V1DownloadSummaryHydrated `json:"hydrated,omitempty"`
	Dehydrated *V1DownloadSummaryDehydrated `json:"dehydrated,omitempty"`
	Errors *[]V1Error `json:"errors,omitempty"`
	Messages *[]V1Message `json:"messages,omitempty"`
	AvailableFiles *V1DownloadSummaryAvailableFiles `json:"available_files,omitempty"`
}

// NewV1DownloadSummary instantiates a new V1DownloadSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DownloadSummary() *V1DownloadSummary {
	this := V1DownloadSummary{}
	return &this
}

// NewV1DownloadSummaryWithDefaults instantiates a new V1DownloadSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DownloadSummaryWithDefaults() *V1DownloadSummary {
	this := V1DownloadSummary{}
	return &this
}

// GetRecordCount returns the RecordCount field value if set, zero value otherwise.
func (o *V1DownloadSummary) GetRecordCount() int32 {
	if o == nil || o.RecordCount == nil {
		var ret int32
		return ret
	}
	return *o.RecordCount
}

// GetRecordCountOk returns a tuple with the RecordCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummary) GetRecordCountOk() (*int32, bool) {
	if o == nil || o.RecordCount == nil {
		return nil, false
	}
	return o.RecordCount, true
}

// HasRecordCount returns a boolean if a field has been set.
func (o *V1DownloadSummary) HasRecordCount() bool {
	if o != nil && o.RecordCount != nil {
		return true
	}

	return false
}

// SetRecordCount gets a reference to the given int32 and assigns it to the RecordCount field.
func (o *V1DownloadSummary) SetRecordCount(v int32) {
	o.RecordCount = &v
}

// GetAssemblyCount returns the AssemblyCount field value if set, zero value otherwise.
func (o *V1DownloadSummary) GetAssemblyCount() int32 {
	if o == nil || o.AssemblyCount == nil {
		var ret int32
		return ret
	}
	return *o.AssemblyCount
}

// GetAssemblyCountOk returns a tuple with the AssemblyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummary) GetAssemblyCountOk() (*int32, bool) {
	if o == nil || o.AssemblyCount == nil {
		return nil, false
	}
	return o.AssemblyCount, true
}

// HasAssemblyCount returns a boolean if a field has been set.
func (o *V1DownloadSummary) HasAssemblyCount() bool {
	if o != nil && o.AssemblyCount != nil {
		return true
	}

	return false
}

// SetAssemblyCount gets a reference to the given int32 and assigns it to the AssemblyCount field.
func (o *V1DownloadSummary) SetAssemblyCount(v int32) {
	o.AssemblyCount = &v
}

// GetResourceUpdatedOn returns the ResourceUpdatedOn field value if set, zero value otherwise.
func (o *V1DownloadSummary) GetResourceUpdatedOn() time.Time {
	if o == nil || o.ResourceUpdatedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.ResourceUpdatedOn
}

// GetResourceUpdatedOnOk returns a tuple with the ResourceUpdatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummary) GetResourceUpdatedOnOk() (*time.Time, bool) {
	if o == nil || o.ResourceUpdatedOn == nil {
		return nil, false
	}
	return o.ResourceUpdatedOn, true
}

// HasResourceUpdatedOn returns a boolean if a field has been set.
func (o *V1DownloadSummary) HasResourceUpdatedOn() bool {
	if o != nil && o.ResourceUpdatedOn != nil {
		return true
	}

	return false
}

// SetResourceUpdatedOn gets a reference to the given time.Time and assigns it to the ResourceUpdatedOn field.
func (o *V1DownloadSummary) SetResourceUpdatedOn(v time.Time) {
	o.ResourceUpdatedOn = &v
}

// GetHydrated returns the Hydrated field value if set, zero value otherwise.
func (o *V1DownloadSummary) GetHydrated() V1DownloadSummaryHydrated {
	if o == nil || o.Hydrated == nil {
		var ret V1DownloadSummaryHydrated
		return ret
	}
	return *o.Hydrated
}

// GetHydratedOk returns a tuple with the Hydrated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummary) GetHydratedOk() (*V1DownloadSummaryHydrated, bool) {
	if o == nil || o.Hydrated == nil {
		return nil, false
	}
	return o.Hydrated, true
}

// HasHydrated returns a boolean if a field has been set.
func (o *V1DownloadSummary) HasHydrated() bool {
	if o != nil && o.Hydrated != nil {
		return true
	}

	return false
}

// SetHydrated gets a reference to the given V1DownloadSummaryHydrated and assigns it to the Hydrated field.
func (o *V1DownloadSummary) SetHydrated(v V1DownloadSummaryHydrated) {
	o.Hydrated = &v
}

// GetDehydrated returns the Dehydrated field value if set, zero value otherwise.
func (o *V1DownloadSummary) GetDehydrated() V1DownloadSummaryDehydrated {
	if o == nil || o.Dehydrated == nil {
		var ret V1DownloadSummaryDehydrated
		return ret
	}
	return *o.Dehydrated
}

// GetDehydratedOk returns a tuple with the Dehydrated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummary) GetDehydratedOk() (*V1DownloadSummaryDehydrated, bool) {
	if o == nil || o.Dehydrated == nil {
		return nil, false
	}
	return o.Dehydrated, true
}

// HasDehydrated returns a boolean if a field has been set.
func (o *V1DownloadSummary) HasDehydrated() bool {
	if o != nil && o.Dehydrated != nil {
		return true
	}

	return false
}

// SetDehydrated gets a reference to the given V1DownloadSummaryDehydrated and assigns it to the Dehydrated field.
func (o *V1DownloadSummary) SetDehydrated(v V1DownloadSummaryDehydrated) {
	o.Dehydrated = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *V1DownloadSummary) GetErrors() []V1Error {
	if o == nil || o.Errors == nil {
		var ret []V1Error
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummary) GetErrorsOk() (*[]V1Error, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *V1DownloadSummary) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []V1Error and assigns it to the Errors field.
func (o *V1DownloadSummary) SetErrors(v []V1Error) {
	o.Errors = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *V1DownloadSummary) GetMessages() []V1Message {
	if o == nil || o.Messages == nil {
		var ret []V1Message
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummary) GetMessagesOk() (*[]V1Message, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *V1DownloadSummary) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []V1Message and assigns it to the Messages field.
func (o *V1DownloadSummary) SetMessages(v []V1Message) {
	o.Messages = &v
}

// GetAvailableFiles returns the AvailableFiles field value if set, zero value otherwise.
func (o *V1DownloadSummary) GetAvailableFiles() V1DownloadSummaryAvailableFiles {
	if o == nil || o.AvailableFiles == nil {
		var ret V1DownloadSummaryAvailableFiles
		return ret
	}
	return *o.AvailableFiles
}

// GetAvailableFilesOk returns a tuple with the AvailableFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummary) GetAvailableFilesOk() (*V1DownloadSummaryAvailableFiles, bool) {
	if o == nil || o.AvailableFiles == nil {
		return nil, false
	}
	return o.AvailableFiles, true
}

// HasAvailableFiles returns a boolean if a field has been set.
func (o *V1DownloadSummary) HasAvailableFiles() bool {
	if o != nil && o.AvailableFiles != nil {
		return true
	}

	return false
}

// SetAvailableFiles gets a reference to the given V1DownloadSummaryAvailableFiles and assigns it to the AvailableFiles field.
func (o *V1DownloadSummary) SetAvailableFiles(v V1DownloadSummaryAvailableFiles) {
	o.AvailableFiles = &v
}

func (o V1DownloadSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecordCount != nil  {
		toSerialize["record_count"] = o.RecordCount
	}
	if o.AssemblyCount != nil  {
		toSerialize["assembly_count"] = o.AssemblyCount
	}
	if o.ResourceUpdatedOn != nil  {
		toSerialize["resource_updated_on"] = o.ResourceUpdatedOn
	}
	if o.Hydrated != nil  {
		toSerialize["hydrated"] = o.Hydrated
	}
	if o.Dehydrated != nil  {
		toSerialize["dehydrated"] = o.Dehydrated
	}
	if o.Errors != nil && len(o.GetErrors()) > 0  {
		toSerialize["errors"] = o.Errors
	}
	if o.Messages != nil && len(o.GetMessages()) > 0  {
		toSerialize["messages"] = o.Messages
	}
	if o.AvailableFiles != nil  {
		toSerialize["available_files"] = o.AvailableFiles
	}
	return json.Marshal(toSerialize)
}

type NullableV1DownloadSummary struct {
	value *V1DownloadSummary
	isSet bool
}

func (v NullableV1DownloadSummary) Get() *V1DownloadSummary {
	return v.value
}

func (v *NullableV1DownloadSummary) Set(val *V1DownloadSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DownloadSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DownloadSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DownloadSummary(val *V1DownloadSummary) *NullableV1DownloadSummary {
	return &NullableV1DownloadSummary{value: val, isSet: true}
}

func (v NullableV1DownloadSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DownloadSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



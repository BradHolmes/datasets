/*
 * NCBI Datasets API
 *
 * ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1reportsSequenceInfo struct for V1reportsSequenceInfo
type V1reportsSequenceInfo struct {
	ChrName *string `json:"chr_name,omitempty"`
	UcscStyleName *string `json:"ucsc_style_name,omitempty"`
	SortOrder *int32 `json:"sort_order,omitempty"`
	AssignedMoleculeLocationType *string `json:"assigned_molecule_location_type,omitempty"`
	RefseqAccession *string `json:"refseq_accession,omitempty"`
	AssemblyUnit *string `json:"assembly_unit,omitempty"`
	Length *int32 `json:"length,omitempty"`
	GenbankAccession *string `json:"genbank_accession,omitempty"`
	GcCount *string `json:"gc_count,omitempty"`
}

// NewV1reportsSequenceInfo instantiates a new V1reportsSequenceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1reportsSequenceInfo() *V1reportsSequenceInfo {
	this := V1reportsSequenceInfo{}
	return &this
}

// NewV1reportsSequenceInfoWithDefaults instantiates a new V1reportsSequenceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1reportsSequenceInfoWithDefaults() *V1reportsSequenceInfo {
	this := V1reportsSequenceInfo{}
	return &this
}

// GetChrName returns the ChrName field value if set, zero value otherwise.
func (o *V1reportsSequenceInfo) GetChrName() string {
	if o == nil || o.ChrName == nil {
		var ret string
		return ret
	}
	return *o.ChrName
}

// GetChrNameOk returns a tuple with the ChrName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSequenceInfo) GetChrNameOk() (*string, bool) {
	if o == nil || o.ChrName == nil {
		return nil, false
	}
	return o.ChrName, true
}

// HasChrName returns a boolean if a field has been set.
func (o *V1reportsSequenceInfo) HasChrName() bool {
	if o != nil && o.ChrName != nil {
		return true
	}

	return false
}

// SetChrName gets a reference to the given string and assigns it to the ChrName field.
func (o *V1reportsSequenceInfo) SetChrName(v string) {
	o.ChrName = &v
}

// GetUcscStyleName returns the UcscStyleName field value if set, zero value otherwise.
func (o *V1reportsSequenceInfo) GetUcscStyleName() string {
	if o == nil || o.UcscStyleName == nil {
		var ret string
		return ret
	}
	return *o.UcscStyleName
}

// GetUcscStyleNameOk returns a tuple with the UcscStyleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSequenceInfo) GetUcscStyleNameOk() (*string, bool) {
	if o == nil || o.UcscStyleName == nil {
		return nil, false
	}
	return o.UcscStyleName, true
}

// HasUcscStyleName returns a boolean if a field has been set.
func (o *V1reportsSequenceInfo) HasUcscStyleName() bool {
	if o != nil && o.UcscStyleName != nil {
		return true
	}

	return false
}

// SetUcscStyleName gets a reference to the given string and assigns it to the UcscStyleName field.
func (o *V1reportsSequenceInfo) SetUcscStyleName(v string) {
	o.UcscStyleName = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *V1reportsSequenceInfo) GetSortOrder() int32 {
	if o == nil || o.SortOrder == nil {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSequenceInfo) GetSortOrderOk() (*int32, bool) {
	if o == nil || o.SortOrder == nil {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *V1reportsSequenceInfo) HasSortOrder() bool {
	if o != nil && o.SortOrder != nil {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *V1reportsSequenceInfo) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetAssignedMoleculeLocationType returns the AssignedMoleculeLocationType field value if set, zero value otherwise.
func (o *V1reportsSequenceInfo) GetAssignedMoleculeLocationType() string {
	if o == nil || o.AssignedMoleculeLocationType == nil {
		var ret string
		return ret
	}
	return *o.AssignedMoleculeLocationType
}

// GetAssignedMoleculeLocationTypeOk returns a tuple with the AssignedMoleculeLocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSequenceInfo) GetAssignedMoleculeLocationTypeOk() (*string, bool) {
	if o == nil || o.AssignedMoleculeLocationType == nil {
		return nil, false
	}
	return o.AssignedMoleculeLocationType, true
}

// HasAssignedMoleculeLocationType returns a boolean if a field has been set.
func (o *V1reportsSequenceInfo) HasAssignedMoleculeLocationType() bool {
	if o != nil && o.AssignedMoleculeLocationType != nil {
		return true
	}

	return false
}

// SetAssignedMoleculeLocationType gets a reference to the given string and assigns it to the AssignedMoleculeLocationType field.
func (o *V1reportsSequenceInfo) SetAssignedMoleculeLocationType(v string) {
	o.AssignedMoleculeLocationType = &v
}

// GetRefseqAccession returns the RefseqAccession field value if set, zero value otherwise.
func (o *V1reportsSequenceInfo) GetRefseqAccession() string {
	if o == nil || o.RefseqAccession == nil {
		var ret string
		return ret
	}
	return *o.RefseqAccession
}

// GetRefseqAccessionOk returns a tuple with the RefseqAccession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSequenceInfo) GetRefseqAccessionOk() (*string, bool) {
	if o == nil || o.RefseqAccession == nil {
		return nil, false
	}
	return o.RefseqAccession, true
}

// HasRefseqAccession returns a boolean if a field has been set.
func (o *V1reportsSequenceInfo) HasRefseqAccession() bool {
	if o != nil && o.RefseqAccession != nil {
		return true
	}

	return false
}

// SetRefseqAccession gets a reference to the given string and assigns it to the RefseqAccession field.
func (o *V1reportsSequenceInfo) SetRefseqAccession(v string) {
	o.RefseqAccession = &v
}

// GetAssemblyUnit returns the AssemblyUnit field value if set, zero value otherwise.
func (o *V1reportsSequenceInfo) GetAssemblyUnit() string {
	if o == nil || o.AssemblyUnit == nil {
		var ret string
		return ret
	}
	return *o.AssemblyUnit
}

// GetAssemblyUnitOk returns a tuple with the AssemblyUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSequenceInfo) GetAssemblyUnitOk() (*string, bool) {
	if o == nil || o.AssemblyUnit == nil {
		return nil, false
	}
	return o.AssemblyUnit, true
}

// HasAssemblyUnit returns a boolean if a field has been set.
func (o *V1reportsSequenceInfo) HasAssemblyUnit() bool {
	if o != nil && o.AssemblyUnit != nil {
		return true
	}

	return false
}

// SetAssemblyUnit gets a reference to the given string and assigns it to the AssemblyUnit field.
func (o *V1reportsSequenceInfo) SetAssemblyUnit(v string) {
	o.AssemblyUnit = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *V1reportsSequenceInfo) GetLength() int32 {
	if o == nil || o.Length == nil {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSequenceInfo) GetLengthOk() (*int32, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *V1reportsSequenceInfo) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
func (o *V1reportsSequenceInfo) SetLength(v int32) {
	o.Length = &v
}

// GetGenbankAccession returns the GenbankAccession field value if set, zero value otherwise.
func (o *V1reportsSequenceInfo) GetGenbankAccession() string {
	if o == nil || o.GenbankAccession == nil {
		var ret string
		return ret
	}
	return *o.GenbankAccession
}

// GetGenbankAccessionOk returns a tuple with the GenbankAccession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSequenceInfo) GetGenbankAccessionOk() (*string, bool) {
	if o == nil || o.GenbankAccession == nil {
		return nil, false
	}
	return o.GenbankAccession, true
}

// HasGenbankAccession returns a boolean if a field has been set.
func (o *V1reportsSequenceInfo) HasGenbankAccession() bool {
	if o != nil && o.GenbankAccession != nil {
		return true
	}

	return false
}

// SetGenbankAccession gets a reference to the given string and assigns it to the GenbankAccession field.
func (o *V1reportsSequenceInfo) SetGenbankAccession(v string) {
	o.GenbankAccession = &v
}

// GetGcCount returns the GcCount field value if set, zero value otherwise.
func (o *V1reportsSequenceInfo) GetGcCount() string {
	if o == nil || o.GcCount == nil {
		var ret string
		return ret
	}
	return *o.GcCount
}

// GetGcCountOk returns a tuple with the GcCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSequenceInfo) GetGcCountOk() (*string, bool) {
	if o == nil || o.GcCount == nil {
		return nil, false
	}
	return o.GcCount, true
}

// HasGcCount returns a boolean if a field has been set.
func (o *V1reportsSequenceInfo) HasGcCount() bool {
	if o != nil && o.GcCount != nil {
		return true
	}

	return false
}

// SetGcCount gets a reference to the given string and assigns it to the GcCount field.
func (o *V1reportsSequenceInfo) SetGcCount(v string) {
	o.GcCount = &v
}

func (o V1reportsSequenceInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChrName != nil  {
		toSerialize["chr_name"] = o.ChrName
	}
	if o.UcscStyleName != nil  {
		toSerialize["ucsc_style_name"] = o.UcscStyleName
	}
	if o.SortOrder != nil  {
		toSerialize["sort_order"] = o.SortOrder
	}
	if o.AssignedMoleculeLocationType != nil  {
		toSerialize["assigned_molecule_location_type"] = o.AssignedMoleculeLocationType
	}
	if o.RefseqAccession != nil  {
		toSerialize["refseq_accession"] = o.RefseqAccession
	}
	if o.AssemblyUnit != nil  {
		toSerialize["assembly_unit"] = o.AssemblyUnit
	}
	if o.Length != nil  {
		toSerialize["length"] = o.Length
	}
	if o.GenbankAccession != nil  {
		toSerialize["genbank_accession"] = o.GenbankAccession
	}
	if o.GcCount != nil  {
		toSerialize["gc_count"] = o.GcCount
	}
	return json.Marshal(toSerialize)
}

type NullableV1reportsSequenceInfo struct {
	value *V1reportsSequenceInfo
	isSet bool
}

func (v NullableV1reportsSequenceInfo) Get() *V1reportsSequenceInfo {
	return v.value
}

func (v *NullableV1reportsSequenceInfo) Set(val *V1reportsSequenceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableV1reportsSequenceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableV1reportsSequenceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1reportsSequenceInfo(val *V1reportsSequenceInfo) *NullableV1reportsSequenceInfo {
	return &NullableV1reportsSequenceInfo{value: val, isSet: true}
}

func (v NullableV1reportsSequenceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1reportsSequenceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



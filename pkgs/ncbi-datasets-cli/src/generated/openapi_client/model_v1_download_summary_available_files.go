/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1DownloadSummaryAvailableFiles struct for V1DownloadSummaryAvailableFiles
type V1DownloadSummaryAvailableFiles struct {
	AllGenomicFasta *V1DownloadSummaryFileSummary `json:"all_genomic_fasta,omitempty"`
	GenomeGff *V1DownloadSummaryFileSummary `json:"genome_gff,omitempty"`
	GenomeGbff *V1DownloadSummaryFileSummary `json:"genome_gbff,omitempty"`
	RnaFasta *V1DownloadSummaryFileSummary `json:"rna_fasta,omitempty"`
	ProtFasta *V1DownloadSummaryFileSummary `json:"prot_fasta,omitempty"`
	GenomeGtf *V1DownloadSummaryFileSummary `json:"genome_gtf,omitempty"`
	CdsFasta *V1DownloadSummaryFileSummary `json:"cds_fasta,omitempty"`
}

// NewV1DownloadSummaryAvailableFiles instantiates a new V1DownloadSummaryAvailableFiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DownloadSummaryAvailableFiles() *V1DownloadSummaryAvailableFiles {
	this := V1DownloadSummaryAvailableFiles{}
	return &this
}

// NewV1DownloadSummaryAvailableFilesWithDefaults instantiates a new V1DownloadSummaryAvailableFiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DownloadSummaryAvailableFilesWithDefaults() *V1DownloadSummaryAvailableFiles {
	this := V1DownloadSummaryAvailableFiles{}
	return &this
}

// GetAllGenomicFasta returns the AllGenomicFasta field value if set, zero value otherwise.
func (o *V1DownloadSummaryAvailableFiles) GetAllGenomicFasta() V1DownloadSummaryFileSummary {
	if o == nil || o.AllGenomicFasta == nil {
		var ret V1DownloadSummaryFileSummary
		return ret
	}
	return *o.AllGenomicFasta
}

// GetAllGenomicFastaOk returns a tuple with the AllGenomicFasta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummaryAvailableFiles) GetAllGenomicFastaOk() (*V1DownloadSummaryFileSummary, bool) {
	if o == nil || o.AllGenomicFasta == nil {
		return nil, false
	}
	return o.AllGenomicFasta, true
}

// HasAllGenomicFasta returns a boolean if a field has been set.
func (o *V1DownloadSummaryAvailableFiles) HasAllGenomicFasta() bool {
	if o != nil && o.AllGenomicFasta != nil {
		return true
	}

	return false
}

// SetAllGenomicFasta gets a reference to the given V1DownloadSummaryFileSummary and assigns it to the AllGenomicFasta field.
func (o *V1DownloadSummaryAvailableFiles) SetAllGenomicFasta(v V1DownloadSummaryFileSummary) {
	o.AllGenomicFasta = &v
}

// GetGenomeGff returns the GenomeGff field value if set, zero value otherwise.
func (o *V1DownloadSummaryAvailableFiles) GetGenomeGff() V1DownloadSummaryFileSummary {
	if o == nil || o.GenomeGff == nil {
		var ret V1DownloadSummaryFileSummary
		return ret
	}
	return *o.GenomeGff
}

// GetGenomeGffOk returns a tuple with the GenomeGff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummaryAvailableFiles) GetGenomeGffOk() (*V1DownloadSummaryFileSummary, bool) {
	if o == nil || o.GenomeGff == nil {
		return nil, false
	}
	return o.GenomeGff, true
}

// HasGenomeGff returns a boolean if a field has been set.
func (o *V1DownloadSummaryAvailableFiles) HasGenomeGff() bool {
	if o != nil && o.GenomeGff != nil {
		return true
	}

	return false
}

// SetGenomeGff gets a reference to the given V1DownloadSummaryFileSummary and assigns it to the GenomeGff field.
func (o *V1DownloadSummaryAvailableFiles) SetGenomeGff(v V1DownloadSummaryFileSummary) {
	o.GenomeGff = &v
}

// GetGenomeGbff returns the GenomeGbff field value if set, zero value otherwise.
func (o *V1DownloadSummaryAvailableFiles) GetGenomeGbff() V1DownloadSummaryFileSummary {
	if o == nil || o.GenomeGbff == nil {
		var ret V1DownloadSummaryFileSummary
		return ret
	}
	return *o.GenomeGbff
}

// GetGenomeGbffOk returns a tuple with the GenomeGbff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummaryAvailableFiles) GetGenomeGbffOk() (*V1DownloadSummaryFileSummary, bool) {
	if o == nil || o.GenomeGbff == nil {
		return nil, false
	}
	return o.GenomeGbff, true
}

// HasGenomeGbff returns a boolean if a field has been set.
func (o *V1DownloadSummaryAvailableFiles) HasGenomeGbff() bool {
	if o != nil && o.GenomeGbff != nil {
		return true
	}

	return false
}

// SetGenomeGbff gets a reference to the given V1DownloadSummaryFileSummary and assigns it to the GenomeGbff field.
func (o *V1DownloadSummaryAvailableFiles) SetGenomeGbff(v V1DownloadSummaryFileSummary) {
	o.GenomeGbff = &v
}

// GetRnaFasta returns the RnaFasta field value if set, zero value otherwise.
func (o *V1DownloadSummaryAvailableFiles) GetRnaFasta() V1DownloadSummaryFileSummary {
	if o == nil || o.RnaFasta == nil {
		var ret V1DownloadSummaryFileSummary
		return ret
	}
	return *o.RnaFasta
}

// GetRnaFastaOk returns a tuple with the RnaFasta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummaryAvailableFiles) GetRnaFastaOk() (*V1DownloadSummaryFileSummary, bool) {
	if o == nil || o.RnaFasta == nil {
		return nil, false
	}
	return o.RnaFasta, true
}

// HasRnaFasta returns a boolean if a field has been set.
func (o *V1DownloadSummaryAvailableFiles) HasRnaFasta() bool {
	if o != nil && o.RnaFasta != nil {
		return true
	}

	return false
}

// SetRnaFasta gets a reference to the given V1DownloadSummaryFileSummary and assigns it to the RnaFasta field.
func (o *V1DownloadSummaryAvailableFiles) SetRnaFasta(v V1DownloadSummaryFileSummary) {
	o.RnaFasta = &v
}

// GetProtFasta returns the ProtFasta field value if set, zero value otherwise.
func (o *V1DownloadSummaryAvailableFiles) GetProtFasta() V1DownloadSummaryFileSummary {
	if o == nil || o.ProtFasta == nil {
		var ret V1DownloadSummaryFileSummary
		return ret
	}
	return *o.ProtFasta
}

// GetProtFastaOk returns a tuple with the ProtFasta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummaryAvailableFiles) GetProtFastaOk() (*V1DownloadSummaryFileSummary, bool) {
	if o == nil || o.ProtFasta == nil {
		return nil, false
	}
	return o.ProtFasta, true
}

// HasProtFasta returns a boolean if a field has been set.
func (o *V1DownloadSummaryAvailableFiles) HasProtFasta() bool {
	if o != nil && o.ProtFasta != nil {
		return true
	}

	return false
}

// SetProtFasta gets a reference to the given V1DownloadSummaryFileSummary and assigns it to the ProtFasta field.
func (o *V1DownloadSummaryAvailableFiles) SetProtFasta(v V1DownloadSummaryFileSummary) {
	o.ProtFasta = &v
}

// GetGenomeGtf returns the GenomeGtf field value if set, zero value otherwise.
func (o *V1DownloadSummaryAvailableFiles) GetGenomeGtf() V1DownloadSummaryFileSummary {
	if o == nil || o.GenomeGtf == nil {
		var ret V1DownloadSummaryFileSummary
		return ret
	}
	return *o.GenomeGtf
}

// GetGenomeGtfOk returns a tuple with the GenomeGtf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummaryAvailableFiles) GetGenomeGtfOk() (*V1DownloadSummaryFileSummary, bool) {
	if o == nil || o.GenomeGtf == nil {
		return nil, false
	}
	return o.GenomeGtf, true
}

// HasGenomeGtf returns a boolean if a field has been set.
func (o *V1DownloadSummaryAvailableFiles) HasGenomeGtf() bool {
	if o != nil && o.GenomeGtf != nil {
		return true
	}

	return false
}

// SetGenomeGtf gets a reference to the given V1DownloadSummaryFileSummary and assigns it to the GenomeGtf field.
func (o *V1DownloadSummaryAvailableFiles) SetGenomeGtf(v V1DownloadSummaryFileSummary) {
	o.GenomeGtf = &v
}

// GetCdsFasta returns the CdsFasta field value if set, zero value otherwise.
func (o *V1DownloadSummaryAvailableFiles) GetCdsFasta() V1DownloadSummaryFileSummary {
	if o == nil || o.CdsFasta == nil {
		var ret V1DownloadSummaryFileSummary
		return ret
	}
	return *o.CdsFasta
}

// GetCdsFastaOk returns a tuple with the CdsFasta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownloadSummaryAvailableFiles) GetCdsFastaOk() (*V1DownloadSummaryFileSummary, bool) {
	if o == nil || o.CdsFasta == nil {
		return nil, false
	}
	return o.CdsFasta, true
}

// HasCdsFasta returns a boolean if a field has been set.
func (o *V1DownloadSummaryAvailableFiles) HasCdsFasta() bool {
	if o != nil && o.CdsFasta != nil {
		return true
	}

	return false
}

// SetCdsFasta gets a reference to the given V1DownloadSummaryFileSummary and assigns it to the CdsFasta field.
func (o *V1DownloadSummaryAvailableFiles) SetCdsFasta(v V1DownloadSummaryFileSummary) {
	o.CdsFasta = &v
}

func (o V1DownloadSummaryAvailableFiles) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllGenomicFasta != nil  {
		toSerialize["all_genomic_fasta"] = o.AllGenomicFasta
	}
	if o.GenomeGff != nil  {
		toSerialize["genome_gff"] = o.GenomeGff
	}
	if o.GenomeGbff != nil  {
		toSerialize["genome_gbff"] = o.GenomeGbff
	}
	if o.RnaFasta != nil  {
		toSerialize["rna_fasta"] = o.RnaFasta
	}
	if o.ProtFasta != nil  {
		toSerialize["prot_fasta"] = o.ProtFasta
	}
	if o.GenomeGtf != nil  {
		toSerialize["genome_gtf"] = o.GenomeGtf
	}
	if o.CdsFasta != nil  {
		toSerialize["cds_fasta"] = o.CdsFasta
	}
	return json.Marshal(toSerialize)
}

type NullableV1DownloadSummaryAvailableFiles struct {
	value *V1DownloadSummaryAvailableFiles
	isSet bool
}

func (v NullableV1DownloadSummaryAvailableFiles) Get() *V1DownloadSummaryAvailableFiles {
	return v.value
}

func (v *NullableV1DownloadSummaryAvailableFiles) Set(val *V1DownloadSummaryAvailableFiles) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DownloadSummaryAvailableFiles) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DownloadSummaryAvailableFiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DownloadSummaryAvailableFiles(val *V1DownloadSummaryAvailableFiles) *NullableV1DownloadSummaryAvailableFiles {
	return &NullableV1DownloadSummaryAvailableFiles{value: val, isSet: true}
}

func (v NullableV1DownloadSummaryAvailableFiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DownloadSummaryAvailableFiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



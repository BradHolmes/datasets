/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1reportsVirusAssemblyIsolate struct for V1reportsVirusAssemblyIsolate
type V1reportsVirusAssemblyIsolate struct {
	Name *string `json:"name,omitempty"`
	Source *string `json:"source,omitempty"`
	CollectionDate *string `json:"collection_date,omitempty"`
}

// NewV1reportsVirusAssemblyIsolate instantiates a new V1reportsVirusAssemblyIsolate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1reportsVirusAssemblyIsolate() *V1reportsVirusAssemblyIsolate {
	this := V1reportsVirusAssemblyIsolate{}
	return &this
}

// NewV1reportsVirusAssemblyIsolateWithDefaults instantiates a new V1reportsVirusAssemblyIsolate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1reportsVirusAssemblyIsolateWithDefaults() *V1reportsVirusAssemblyIsolate {
	this := V1reportsVirusAssemblyIsolate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1reportsVirusAssemblyIsolate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsVirusAssemblyIsolate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1reportsVirusAssemblyIsolate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1reportsVirusAssemblyIsolate) SetName(v string) {
	o.Name = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *V1reportsVirusAssemblyIsolate) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsVirusAssemblyIsolate) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *V1reportsVirusAssemblyIsolate) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *V1reportsVirusAssemblyIsolate) SetSource(v string) {
	o.Source = &v
}

// GetCollectionDate returns the CollectionDate field value if set, zero value otherwise.
func (o *V1reportsVirusAssemblyIsolate) GetCollectionDate() string {
	if o == nil || o.CollectionDate == nil {
		var ret string
		return ret
	}
	return *o.CollectionDate
}

// GetCollectionDateOk returns a tuple with the CollectionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsVirusAssemblyIsolate) GetCollectionDateOk() (*string, bool) {
	if o == nil || o.CollectionDate == nil {
		return nil, false
	}
	return o.CollectionDate, true
}

// HasCollectionDate returns a boolean if a field has been set.
func (o *V1reportsVirusAssemblyIsolate) HasCollectionDate() bool {
	if o != nil && o.CollectionDate != nil {
		return true
	}

	return false
}

// SetCollectionDate gets a reference to the given string and assigns it to the CollectionDate field.
func (o *V1reportsVirusAssemblyIsolate) SetCollectionDate(v string) {
	o.CollectionDate = &v
}

func (o V1reportsVirusAssemblyIsolate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil  {
		toSerialize["name"] = o.Name
	}
	if o.Source != nil  {
		toSerialize["source"] = o.Source
	}
	if o.CollectionDate != nil  {
		toSerialize["collection_date"] = o.CollectionDate
	}
	return json.Marshal(toSerialize)
}

type NullableV1reportsVirusAssemblyIsolate struct {
	value *V1reportsVirusAssemblyIsolate
	isSet bool
}

func (v NullableV1reportsVirusAssemblyIsolate) Get() *V1reportsVirusAssemblyIsolate {
	return v.value
}

func (v *NullableV1reportsVirusAssemblyIsolate) Set(val *V1reportsVirusAssemblyIsolate) {
	v.value = val
	v.isSet = true
}

func (v NullableV1reportsVirusAssemblyIsolate) IsSet() bool {
	return v.isSet
}

func (v *NullableV1reportsVirusAssemblyIsolate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1reportsVirusAssemblyIsolate(val *V1reportsVirusAssemblyIsolate) *NullableV1reportsVirusAssemblyIsolate {
	return &NullableV1reportsVirusAssemblyIsolate{value: val, isSet: true}
}

func (v NullableV1reportsVirusAssemblyIsolate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1reportsVirusAssemblyIsolate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



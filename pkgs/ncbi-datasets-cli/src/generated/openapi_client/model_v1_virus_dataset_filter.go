/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
	"time"
)

// V1VirusDatasetFilter struct for V1VirusDatasetFilter
type V1VirusDatasetFilter struct {
	Accessions *[]string `json:"accessions,omitempty"`
	Taxon *string `json:"taxon,omitempty"`
	RefseqOnly *bool `json:"refseq_only,omitempty"`
	AnnotatedOnly *bool `json:"annotated_only,omitempty"`
	ReleasedSince *time.Time `json:"released_since,omitempty"`
	Host *string `json:"host,omitempty"`
	PangolinClassification *string `json:"pangolin_classification,omitempty"`
	GeoLocation *string `json:"geo_location,omitempty"`
	CompleteOnly *bool `json:"complete_only,omitempty"`
}

// NewV1VirusDatasetFilter instantiates a new V1VirusDatasetFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1VirusDatasetFilter() *V1VirusDatasetFilter {
	this := V1VirusDatasetFilter{}
	return &this
}

// NewV1VirusDatasetFilterWithDefaults instantiates a new V1VirusDatasetFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1VirusDatasetFilterWithDefaults() *V1VirusDatasetFilter {
	this := V1VirusDatasetFilter{}
	return &this
}

// GetAccessions returns the Accessions field value if set, zero value otherwise.
func (o *V1VirusDatasetFilter) GetAccessions() []string {
	if o == nil || o.Accessions == nil {
		var ret []string
		return ret
	}
	return *o.Accessions
}

// GetAccessionsOk returns a tuple with the Accessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirusDatasetFilter) GetAccessionsOk() (*[]string, bool) {
	if o == nil || o.Accessions == nil {
		return nil, false
	}
	return o.Accessions, true
}

// HasAccessions returns a boolean if a field has been set.
func (o *V1VirusDatasetFilter) HasAccessions() bool {
	if o != nil && o.Accessions != nil {
		return true
	}

	return false
}

// SetAccessions gets a reference to the given []string and assigns it to the Accessions field.
func (o *V1VirusDatasetFilter) SetAccessions(v []string) {
	o.Accessions = &v
}

// GetTaxon returns the Taxon field value if set, zero value otherwise.
func (o *V1VirusDatasetFilter) GetTaxon() string {
	if o == nil || o.Taxon == nil {
		var ret string
		return ret
	}
	return *o.Taxon
}

// GetTaxonOk returns a tuple with the Taxon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirusDatasetFilter) GetTaxonOk() (*string, bool) {
	if o == nil || o.Taxon == nil {
		return nil, false
	}
	return o.Taxon, true
}

// HasTaxon returns a boolean if a field has been set.
func (o *V1VirusDatasetFilter) HasTaxon() bool {
	if o != nil && o.Taxon != nil {
		return true
	}

	return false
}

// SetTaxon gets a reference to the given string and assigns it to the Taxon field.
func (o *V1VirusDatasetFilter) SetTaxon(v string) {
	o.Taxon = &v
}

// GetRefseqOnly returns the RefseqOnly field value if set, zero value otherwise.
func (o *V1VirusDatasetFilter) GetRefseqOnly() bool {
	if o == nil || o.RefseqOnly == nil {
		var ret bool
		return ret
	}
	return *o.RefseqOnly
}

// GetRefseqOnlyOk returns a tuple with the RefseqOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirusDatasetFilter) GetRefseqOnlyOk() (*bool, bool) {
	if o == nil || o.RefseqOnly == nil {
		return nil, false
	}
	return o.RefseqOnly, true
}

// HasRefseqOnly returns a boolean if a field has been set.
func (o *V1VirusDatasetFilter) HasRefseqOnly() bool {
	if o != nil && o.RefseqOnly != nil {
		return true
	}

	return false
}

// SetRefseqOnly gets a reference to the given bool and assigns it to the RefseqOnly field.
func (o *V1VirusDatasetFilter) SetRefseqOnly(v bool) {
	o.RefseqOnly = &v
}

// GetAnnotatedOnly returns the AnnotatedOnly field value if set, zero value otherwise.
func (o *V1VirusDatasetFilter) GetAnnotatedOnly() bool {
	if o == nil || o.AnnotatedOnly == nil {
		var ret bool
		return ret
	}
	return *o.AnnotatedOnly
}

// GetAnnotatedOnlyOk returns a tuple with the AnnotatedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirusDatasetFilter) GetAnnotatedOnlyOk() (*bool, bool) {
	if o == nil || o.AnnotatedOnly == nil {
		return nil, false
	}
	return o.AnnotatedOnly, true
}

// HasAnnotatedOnly returns a boolean if a field has been set.
func (o *V1VirusDatasetFilter) HasAnnotatedOnly() bool {
	if o != nil && o.AnnotatedOnly != nil {
		return true
	}

	return false
}

// SetAnnotatedOnly gets a reference to the given bool and assigns it to the AnnotatedOnly field.
func (o *V1VirusDatasetFilter) SetAnnotatedOnly(v bool) {
	o.AnnotatedOnly = &v
}

// GetReleasedSince returns the ReleasedSince field value if set, zero value otherwise.
func (o *V1VirusDatasetFilter) GetReleasedSince() time.Time {
	if o == nil || o.ReleasedSince == nil {
		var ret time.Time
		return ret
	}
	return *o.ReleasedSince
}

// GetReleasedSinceOk returns a tuple with the ReleasedSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirusDatasetFilter) GetReleasedSinceOk() (*time.Time, bool) {
	if o == nil || o.ReleasedSince == nil {
		return nil, false
	}
	return o.ReleasedSince, true
}

// HasReleasedSince returns a boolean if a field has been set.
func (o *V1VirusDatasetFilter) HasReleasedSince() bool {
	if o != nil && o.ReleasedSince != nil {
		return true
	}

	return false
}

// SetReleasedSince gets a reference to the given time.Time and assigns it to the ReleasedSince field.
func (o *V1VirusDatasetFilter) SetReleasedSince(v time.Time) {
	o.ReleasedSince = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *V1VirusDatasetFilter) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirusDatasetFilter) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *V1VirusDatasetFilter) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *V1VirusDatasetFilter) SetHost(v string) {
	o.Host = &v
}

// GetPangolinClassification returns the PangolinClassification field value if set, zero value otherwise.
func (o *V1VirusDatasetFilter) GetPangolinClassification() string {
	if o == nil || o.PangolinClassification == nil {
		var ret string
		return ret
	}
	return *o.PangolinClassification
}

// GetPangolinClassificationOk returns a tuple with the PangolinClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirusDatasetFilter) GetPangolinClassificationOk() (*string, bool) {
	if o == nil || o.PangolinClassification == nil {
		return nil, false
	}
	return o.PangolinClassification, true
}

// HasPangolinClassification returns a boolean if a field has been set.
func (o *V1VirusDatasetFilter) HasPangolinClassification() bool {
	if o != nil && o.PangolinClassification != nil {
		return true
	}

	return false
}

// SetPangolinClassification gets a reference to the given string and assigns it to the PangolinClassification field.
func (o *V1VirusDatasetFilter) SetPangolinClassification(v string) {
	o.PangolinClassification = &v
}

// GetGeoLocation returns the GeoLocation field value if set, zero value otherwise.
func (o *V1VirusDatasetFilter) GetGeoLocation() string {
	if o == nil || o.GeoLocation == nil {
		var ret string
		return ret
	}
	return *o.GeoLocation
}

// GetGeoLocationOk returns a tuple with the GeoLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirusDatasetFilter) GetGeoLocationOk() (*string, bool) {
	if o == nil || o.GeoLocation == nil {
		return nil, false
	}
	return o.GeoLocation, true
}

// HasGeoLocation returns a boolean if a field has been set.
func (o *V1VirusDatasetFilter) HasGeoLocation() bool {
	if o != nil && o.GeoLocation != nil {
		return true
	}

	return false
}

// SetGeoLocation gets a reference to the given string and assigns it to the GeoLocation field.
func (o *V1VirusDatasetFilter) SetGeoLocation(v string) {
	o.GeoLocation = &v
}

// GetCompleteOnly returns the CompleteOnly field value if set, zero value otherwise.
func (o *V1VirusDatasetFilter) GetCompleteOnly() bool {
	if o == nil || o.CompleteOnly == nil {
		var ret bool
		return ret
	}
	return *o.CompleteOnly
}

// GetCompleteOnlyOk returns a tuple with the CompleteOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirusDatasetFilter) GetCompleteOnlyOk() (*bool, bool) {
	if o == nil || o.CompleteOnly == nil {
		return nil, false
	}
	return o.CompleteOnly, true
}

// HasCompleteOnly returns a boolean if a field has been set.
func (o *V1VirusDatasetFilter) HasCompleteOnly() bool {
	if o != nil && o.CompleteOnly != nil {
		return true
	}

	return false
}

// SetCompleteOnly gets a reference to the given bool and assigns it to the CompleteOnly field.
func (o *V1VirusDatasetFilter) SetCompleteOnly(v bool) {
	o.CompleteOnly = &v
}

func (o V1VirusDatasetFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accessions != nil && len(o.GetAccessions()) > 0  {
		toSerialize["accessions"] = o.Accessions
	}
	if o.Taxon != nil  {
		toSerialize["taxon"] = o.Taxon
	}
	if o.RefseqOnly != nil  {
		toSerialize["refseq_only"] = o.RefseqOnly
	}
	if o.AnnotatedOnly != nil  {
		toSerialize["annotated_only"] = o.AnnotatedOnly
	}
	if o.ReleasedSince != nil  {
		toSerialize["released_since"] = o.ReleasedSince
	}
	if o.Host != nil  {
		toSerialize["host"] = o.Host
	}
	if o.PangolinClassification != nil  {
		toSerialize["pangolin_classification"] = o.PangolinClassification
	}
	if o.GeoLocation != nil  {
		toSerialize["geo_location"] = o.GeoLocation
	}
	if o.CompleteOnly != nil  {
		toSerialize["complete_only"] = o.CompleteOnly
	}
	return json.Marshal(toSerialize)
}

type NullableV1VirusDatasetFilter struct {
	value *V1VirusDatasetFilter
	isSet bool
}

func (v NullableV1VirusDatasetFilter) Get() *V1VirusDatasetFilter {
	return v.value
}

func (v *NullableV1VirusDatasetFilter) Set(val *V1VirusDatasetFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableV1VirusDatasetFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableV1VirusDatasetFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1VirusDatasetFilter(val *V1VirusDatasetFilter) *NullableV1VirusDatasetFilter {
	return &NullableV1VirusDatasetFilter{value: val, isSet: true}
}

func (v NullableV1VirusDatasetFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1VirusDatasetFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



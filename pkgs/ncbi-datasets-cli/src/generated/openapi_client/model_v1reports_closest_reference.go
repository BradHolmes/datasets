/*
 * NCBI Datasets API
 *
 * ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1reportsClosestReference struct for V1reportsClosestReference
type V1reportsClosestReference struct {
	Accession *string `json:"accession,omitempty"`
	Name *string `json:"name,omitempty"`
	PercentCoverage *float32 `json:"percent_coverage,omitempty"`
	PercentIdentical *float32 `json:"percent_identical,omitempty"`
	AlignLength *int32 `json:"align_length,omitempty"`
}

// NewV1reportsClosestReference instantiates a new V1reportsClosestReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1reportsClosestReference() *V1reportsClosestReference {
	this := V1reportsClosestReference{}
	return &this
}

// NewV1reportsClosestReferenceWithDefaults instantiates a new V1reportsClosestReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1reportsClosestReferenceWithDefaults() *V1reportsClosestReference {
	this := V1reportsClosestReference{}
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V1reportsClosestReference) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsClosestReference) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V1reportsClosestReference) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V1reportsClosestReference) SetAccession(v string) {
	o.Accession = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1reportsClosestReference) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsClosestReference) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1reportsClosestReference) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1reportsClosestReference) SetName(v string) {
	o.Name = &v
}

// GetPercentCoverage returns the PercentCoverage field value if set, zero value otherwise.
func (o *V1reportsClosestReference) GetPercentCoverage() float32 {
	if o == nil || o.PercentCoverage == nil {
		var ret float32
		return ret
	}
	return *o.PercentCoverage
}

// GetPercentCoverageOk returns a tuple with the PercentCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsClosestReference) GetPercentCoverageOk() (*float32, bool) {
	if o == nil || o.PercentCoverage == nil {
		return nil, false
	}
	return o.PercentCoverage, true
}

// HasPercentCoverage returns a boolean if a field has been set.
func (o *V1reportsClosestReference) HasPercentCoverage() bool {
	if o != nil && o.PercentCoverage != nil {
		return true
	}

	return false
}

// SetPercentCoverage gets a reference to the given float32 and assigns it to the PercentCoverage field.
func (o *V1reportsClosestReference) SetPercentCoverage(v float32) {
	o.PercentCoverage = &v
}

// GetPercentIdentical returns the PercentIdentical field value if set, zero value otherwise.
func (o *V1reportsClosestReference) GetPercentIdentical() float32 {
	if o == nil || o.PercentIdentical == nil {
		var ret float32
		return ret
	}
	return *o.PercentIdentical
}

// GetPercentIdenticalOk returns a tuple with the PercentIdentical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsClosestReference) GetPercentIdenticalOk() (*float32, bool) {
	if o == nil || o.PercentIdentical == nil {
		return nil, false
	}
	return o.PercentIdentical, true
}

// HasPercentIdentical returns a boolean if a field has been set.
func (o *V1reportsClosestReference) HasPercentIdentical() bool {
	if o != nil && o.PercentIdentical != nil {
		return true
	}

	return false
}

// SetPercentIdentical gets a reference to the given float32 and assigns it to the PercentIdentical field.
func (o *V1reportsClosestReference) SetPercentIdentical(v float32) {
	o.PercentIdentical = &v
}

// GetAlignLength returns the AlignLength field value if set, zero value otherwise.
func (o *V1reportsClosestReference) GetAlignLength() int32 {
	if o == nil || o.AlignLength == nil {
		var ret int32
		return ret
	}
	return *o.AlignLength
}

// GetAlignLengthOk returns a tuple with the AlignLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsClosestReference) GetAlignLengthOk() (*int32, bool) {
	if o == nil || o.AlignLength == nil {
		return nil, false
	}
	return o.AlignLength, true
}

// HasAlignLength returns a boolean if a field has been set.
func (o *V1reportsClosestReference) HasAlignLength() bool {
	if o != nil && o.AlignLength != nil {
		return true
	}

	return false
}

// SetAlignLength gets a reference to the given int32 and assigns it to the AlignLength field.
func (o *V1reportsClosestReference) SetAlignLength(v int32) {
	o.AlignLength = &v
}

func (o V1reportsClosestReference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil  {
		toSerialize["accession"] = o.Accession
	}
	if o.Name != nil  {
		toSerialize["name"] = o.Name
	}
	if o.PercentCoverage != nil  {
		toSerialize["percent_coverage"] = o.PercentCoverage
	}
	if o.PercentIdentical != nil  {
		toSerialize["percent_identical"] = o.PercentIdentical
	}
	if o.AlignLength != nil  {
		toSerialize["align_length"] = o.AlignLength
	}
	return json.Marshal(toSerialize)
}

type NullableV1reportsClosestReference struct {
	value *V1reportsClosestReference
	isSet bool
}

func (v NullableV1reportsClosestReference) Get() *V1reportsClosestReference {
	return v.value
}

func (v *NullableV1reportsClosestReference) Set(val *V1reportsClosestReference) {
	v.value = val
	v.isSet = true
}

func (v NullableV1reportsClosestReference) IsSet() bool {
	return v.isSet
}

func (v *NullableV1reportsClosestReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1reportsClosestReference(val *V1reportsClosestReference) *NullableV1reportsClosestReference {
	return &NullableV1reportsClosestReference{value: val, isSet: true}
}

func (v NullableV1reportsClosestReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1reportsClosestReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



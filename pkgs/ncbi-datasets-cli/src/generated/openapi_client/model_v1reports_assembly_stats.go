/*
 * NCBI Datasets API
 *
 * ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1reportsAssemblyStats struct for V1reportsAssemblyStats
type V1reportsAssemblyStats struct {
	TotalNumberOfChromosomes *int32 `json:"total_number_of_chromosomes,omitempty"`
	TotalSequenceLength *string `json:"total_sequence_length,omitempty"`
	TotalUngappedLength *string `json:"total_ungapped_length,omitempty"`
	NumberOfContigs *int32 `json:"number_of_contigs,omitempty"`
	ContigN50 *int32 `json:"contig_n50,omitempty"`
	ContigL50 *int32 `json:"contig_l50,omitempty"`
	NumberOfScaffolds *int32 `json:"number_of_scaffolds,omitempty"`
	ScaffoldN50 *int32 `json:"scaffold_n50,omitempty"`
	ScaffoldL50 *int32 `json:"scaffold_l50,omitempty"`
	GapsBetweenScaffoldsCount *int32 `json:"gaps_between_scaffolds_count,omitempty"`
	NumberOfComponentSequences *int32 `json:"number_of_component_sequences,omitempty"`
	GcCount *string `json:"gc_count,omitempty"`
}

// NewV1reportsAssemblyStats instantiates a new V1reportsAssemblyStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1reportsAssemblyStats() *V1reportsAssemblyStats {
	this := V1reportsAssemblyStats{}
	return &this
}

// NewV1reportsAssemblyStatsWithDefaults instantiates a new V1reportsAssemblyStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1reportsAssemblyStatsWithDefaults() *V1reportsAssemblyStats {
	this := V1reportsAssemblyStats{}
	return &this
}

// GetTotalNumberOfChromosomes returns the TotalNumberOfChromosomes field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetTotalNumberOfChromosomes() int32 {
	if o == nil || o.TotalNumberOfChromosomes == nil {
		var ret int32
		return ret
	}
	return *o.TotalNumberOfChromosomes
}

// GetTotalNumberOfChromosomesOk returns a tuple with the TotalNumberOfChromosomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetTotalNumberOfChromosomesOk() (*int32, bool) {
	if o == nil || o.TotalNumberOfChromosomes == nil {
		return nil, false
	}
	return o.TotalNumberOfChromosomes, true
}

// HasTotalNumberOfChromosomes returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasTotalNumberOfChromosomes() bool {
	if o != nil && o.TotalNumberOfChromosomes != nil {
		return true
	}

	return false
}

// SetTotalNumberOfChromosomes gets a reference to the given int32 and assigns it to the TotalNumberOfChromosomes field.
func (o *V1reportsAssemblyStats) SetTotalNumberOfChromosomes(v int32) {
	o.TotalNumberOfChromosomes = &v
}

// GetTotalSequenceLength returns the TotalSequenceLength field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetTotalSequenceLength() string {
	if o == nil || o.TotalSequenceLength == nil {
		var ret string
		return ret
	}
	return *o.TotalSequenceLength
}

// GetTotalSequenceLengthOk returns a tuple with the TotalSequenceLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetTotalSequenceLengthOk() (*string, bool) {
	if o == nil || o.TotalSequenceLength == nil {
		return nil, false
	}
	return o.TotalSequenceLength, true
}

// HasTotalSequenceLength returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasTotalSequenceLength() bool {
	if o != nil && o.TotalSequenceLength != nil {
		return true
	}

	return false
}

// SetTotalSequenceLength gets a reference to the given string and assigns it to the TotalSequenceLength field.
func (o *V1reportsAssemblyStats) SetTotalSequenceLength(v string) {
	o.TotalSequenceLength = &v
}

// GetTotalUngappedLength returns the TotalUngappedLength field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetTotalUngappedLength() string {
	if o == nil || o.TotalUngappedLength == nil {
		var ret string
		return ret
	}
	return *o.TotalUngappedLength
}

// GetTotalUngappedLengthOk returns a tuple with the TotalUngappedLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetTotalUngappedLengthOk() (*string, bool) {
	if o == nil || o.TotalUngappedLength == nil {
		return nil, false
	}
	return o.TotalUngappedLength, true
}

// HasTotalUngappedLength returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasTotalUngappedLength() bool {
	if o != nil && o.TotalUngappedLength != nil {
		return true
	}

	return false
}

// SetTotalUngappedLength gets a reference to the given string and assigns it to the TotalUngappedLength field.
func (o *V1reportsAssemblyStats) SetTotalUngappedLength(v string) {
	o.TotalUngappedLength = &v
}

// GetNumberOfContigs returns the NumberOfContigs field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetNumberOfContigs() int32 {
	if o == nil || o.NumberOfContigs == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfContigs
}

// GetNumberOfContigsOk returns a tuple with the NumberOfContigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetNumberOfContigsOk() (*int32, bool) {
	if o == nil || o.NumberOfContigs == nil {
		return nil, false
	}
	return o.NumberOfContigs, true
}

// HasNumberOfContigs returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasNumberOfContigs() bool {
	if o != nil && o.NumberOfContigs != nil {
		return true
	}

	return false
}

// SetNumberOfContigs gets a reference to the given int32 and assigns it to the NumberOfContigs field.
func (o *V1reportsAssemblyStats) SetNumberOfContigs(v int32) {
	o.NumberOfContigs = &v
}

// GetContigN50 returns the ContigN50 field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetContigN50() int32 {
	if o == nil || o.ContigN50 == nil {
		var ret int32
		return ret
	}
	return *o.ContigN50
}

// GetContigN50Ok returns a tuple with the ContigN50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetContigN50Ok() (*int32, bool) {
	if o == nil || o.ContigN50 == nil {
		return nil, false
	}
	return o.ContigN50, true
}

// HasContigN50 returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasContigN50() bool {
	if o != nil && o.ContigN50 != nil {
		return true
	}

	return false
}

// SetContigN50 gets a reference to the given int32 and assigns it to the ContigN50 field.
func (o *V1reportsAssemblyStats) SetContigN50(v int32) {
	o.ContigN50 = &v
}

// GetContigL50 returns the ContigL50 field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetContigL50() int32 {
	if o == nil || o.ContigL50 == nil {
		var ret int32
		return ret
	}
	return *o.ContigL50
}

// GetContigL50Ok returns a tuple with the ContigL50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetContigL50Ok() (*int32, bool) {
	if o == nil || o.ContigL50 == nil {
		return nil, false
	}
	return o.ContigL50, true
}

// HasContigL50 returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasContigL50() bool {
	if o != nil && o.ContigL50 != nil {
		return true
	}

	return false
}

// SetContigL50 gets a reference to the given int32 and assigns it to the ContigL50 field.
func (o *V1reportsAssemblyStats) SetContigL50(v int32) {
	o.ContigL50 = &v
}

// GetNumberOfScaffolds returns the NumberOfScaffolds field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetNumberOfScaffolds() int32 {
	if o == nil || o.NumberOfScaffolds == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfScaffolds
}

// GetNumberOfScaffoldsOk returns a tuple with the NumberOfScaffolds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetNumberOfScaffoldsOk() (*int32, bool) {
	if o == nil || o.NumberOfScaffolds == nil {
		return nil, false
	}
	return o.NumberOfScaffolds, true
}

// HasNumberOfScaffolds returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasNumberOfScaffolds() bool {
	if o != nil && o.NumberOfScaffolds != nil {
		return true
	}

	return false
}

// SetNumberOfScaffolds gets a reference to the given int32 and assigns it to the NumberOfScaffolds field.
func (o *V1reportsAssemblyStats) SetNumberOfScaffolds(v int32) {
	o.NumberOfScaffolds = &v
}

// GetScaffoldN50 returns the ScaffoldN50 field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetScaffoldN50() int32 {
	if o == nil || o.ScaffoldN50 == nil {
		var ret int32
		return ret
	}
	return *o.ScaffoldN50
}

// GetScaffoldN50Ok returns a tuple with the ScaffoldN50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetScaffoldN50Ok() (*int32, bool) {
	if o == nil || o.ScaffoldN50 == nil {
		return nil, false
	}
	return o.ScaffoldN50, true
}

// HasScaffoldN50 returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasScaffoldN50() bool {
	if o != nil && o.ScaffoldN50 != nil {
		return true
	}

	return false
}

// SetScaffoldN50 gets a reference to the given int32 and assigns it to the ScaffoldN50 field.
func (o *V1reportsAssemblyStats) SetScaffoldN50(v int32) {
	o.ScaffoldN50 = &v
}

// GetScaffoldL50 returns the ScaffoldL50 field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetScaffoldL50() int32 {
	if o == nil || o.ScaffoldL50 == nil {
		var ret int32
		return ret
	}
	return *o.ScaffoldL50
}

// GetScaffoldL50Ok returns a tuple with the ScaffoldL50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetScaffoldL50Ok() (*int32, bool) {
	if o == nil || o.ScaffoldL50 == nil {
		return nil, false
	}
	return o.ScaffoldL50, true
}

// HasScaffoldL50 returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasScaffoldL50() bool {
	if o != nil && o.ScaffoldL50 != nil {
		return true
	}

	return false
}

// SetScaffoldL50 gets a reference to the given int32 and assigns it to the ScaffoldL50 field.
func (o *V1reportsAssemblyStats) SetScaffoldL50(v int32) {
	o.ScaffoldL50 = &v
}

// GetGapsBetweenScaffoldsCount returns the GapsBetweenScaffoldsCount field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetGapsBetweenScaffoldsCount() int32 {
	if o == nil || o.GapsBetweenScaffoldsCount == nil {
		var ret int32
		return ret
	}
	return *o.GapsBetweenScaffoldsCount
}

// GetGapsBetweenScaffoldsCountOk returns a tuple with the GapsBetweenScaffoldsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetGapsBetweenScaffoldsCountOk() (*int32, bool) {
	if o == nil || o.GapsBetweenScaffoldsCount == nil {
		return nil, false
	}
	return o.GapsBetweenScaffoldsCount, true
}

// HasGapsBetweenScaffoldsCount returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasGapsBetweenScaffoldsCount() bool {
	if o != nil && o.GapsBetweenScaffoldsCount != nil {
		return true
	}

	return false
}

// SetGapsBetweenScaffoldsCount gets a reference to the given int32 and assigns it to the GapsBetweenScaffoldsCount field.
func (o *V1reportsAssemblyStats) SetGapsBetweenScaffoldsCount(v int32) {
	o.GapsBetweenScaffoldsCount = &v
}

// GetNumberOfComponentSequences returns the NumberOfComponentSequences field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetNumberOfComponentSequences() int32 {
	if o == nil || o.NumberOfComponentSequences == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfComponentSequences
}

// GetNumberOfComponentSequencesOk returns a tuple with the NumberOfComponentSequences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetNumberOfComponentSequencesOk() (*int32, bool) {
	if o == nil || o.NumberOfComponentSequences == nil {
		return nil, false
	}
	return o.NumberOfComponentSequences, true
}

// HasNumberOfComponentSequences returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasNumberOfComponentSequences() bool {
	if o != nil && o.NumberOfComponentSequences != nil {
		return true
	}

	return false
}

// SetNumberOfComponentSequences gets a reference to the given int32 and assigns it to the NumberOfComponentSequences field.
func (o *V1reportsAssemblyStats) SetNumberOfComponentSequences(v int32) {
	o.NumberOfComponentSequences = &v
}

// GetGcCount returns the GcCount field value if set, zero value otherwise.
func (o *V1reportsAssemblyStats) GetGcCount() string {
	if o == nil || o.GcCount == nil {
		var ret string
		return ret
	}
	return *o.GcCount
}

// GetGcCountOk returns a tuple with the GcCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsAssemblyStats) GetGcCountOk() (*string, bool) {
	if o == nil || o.GcCount == nil {
		return nil, false
	}
	return o.GcCount, true
}

// HasGcCount returns a boolean if a field has been set.
func (o *V1reportsAssemblyStats) HasGcCount() bool {
	if o != nil && o.GcCount != nil {
		return true
	}

	return false
}

// SetGcCount gets a reference to the given string and assigns it to the GcCount field.
func (o *V1reportsAssemblyStats) SetGcCount(v string) {
	o.GcCount = &v
}

func (o V1reportsAssemblyStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalNumberOfChromosomes != nil  {
		toSerialize["total_number_of_chromosomes"] = o.TotalNumberOfChromosomes
	}
	if o.TotalSequenceLength != nil  {
		toSerialize["total_sequence_length"] = o.TotalSequenceLength
	}
	if o.TotalUngappedLength != nil  {
		toSerialize["total_ungapped_length"] = o.TotalUngappedLength
	}
	if o.NumberOfContigs != nil  {
		toSerialize["number_of_contigs"] = o.NumberOfContigs
	}
	if o.ContigN50 != nil  {
		toSerialize["contig_n50"] = o.ContigN50
	}
	if o.ContigL50 != nil  {
		toSerialize["contig_l50"] = o.ContigL50
	}
	if o.NumberOfScaffolds != nil  {
		toSerialize["number_of_scaffolds"] = o.NumberOfScaffolds
	}
	if o.ScaffoldN50 != nil  {
		toSerialize["scaffold_n50"] = o.ScaffoldN50
	}
	if o.ScaffoldL50 != nil  {
		toSerialize["scaffold_l50"] = o.ScaffoldL50
	}
	if o.GapsBetweenScaffoldsCount != nil  {
		toSerialize["gaps_between_scaffolds_count"] = o.GapsBetweenScaffoldsCount
	}
	if o.NumberOfComponentSequences != nil  {
		toSerialize["number_of_component_sequences"] = o.NumberOfComponentSequences
	}
	if o.GcCount != nil  {
		toSerialize["gc_count"] = o.GcCount
	}
	return json.Marshal(toSerialize)
}

type NullableV1reportsAssemblyStats struct {
	value *V1reportsAssemblyStats
	isSet bool
}

func (v NullableV1reportsAssemblyStats) Get() *V1reportsAssemblyStats {
	return v.value
}

func (v *NullableV1reportsAssemblyStats) Set(val *V1reportsAssemblyStats) {
	v.value = val
	v.isSet = true
}

func (v NullableV1reportsAssemblyStats) IsSet() bool {
	return v.isSet
}

func (v *NullableV1reportsAssemblyStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1reportsAssemblyStats(val *V1reportsAssemblyStats) *NullableV1reportsAssemblyStats {
	return &NullableV1reportsAssemblyStats{value: val, isSet: true}
}

func (v NullableV1reportsAssemblyStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1reportsAssemblyStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



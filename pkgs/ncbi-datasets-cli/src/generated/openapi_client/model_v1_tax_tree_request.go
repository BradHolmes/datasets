/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 1 API is considred stable and will not be subject to breaking changes. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1TaxTreeRequest struct for V1TaxTreeRequest
type V1TaxTreeRequest struct {
	TaxId *string `json:"tax_id,omitempty"`
	TaxToken *string `json:"tax_token,omitempty"`
	Taxon *string `json:"taxon,omitempty"`
	ChildrenOnly *bool `json:"children_only,omitempty"`
}

// NewV1TaxTreeRequest instantiates a new V1TaxTreeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TaxTreeRequest() *V1TaxTreeRequest {
	this := V1TaxTreeRequest{}
	return &this
}

// NewV1TaxTreeRequestWithDefaults instantiates a new V1TaxTreeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TaxTreeRequestWithDefaults() *V1TaxTreeRequest {
	this := V1TaxTreeRequest{}
	return &this
}

// GetTaxId returns the TaxId field value if set, zero value otherwise.
func (o *V1TaxTreeRequest) GetTaxId() string {
	if o == nil || o.TaxId == nil {
		var ret string
		return ret
	}
	return *o.TaxId
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxTreeRequest) GetTaxIdOk() (*string, bool) {
	if o == nil || o.TaxId == nil {
		return nil, false
	}
	return o.TaxId, true
}

// HasTaxId returns a boolean if a field has been set.
func (o *V1TaxTreeRequest) HasTaxId() bool {
	if o != nil && o.TaxId != nil {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given string and assigns it to the TaxId field.
func (o *V1TaxTreeRequest) SetTaxId(v string) {
	o.TaxId = &v
}

// GetTaxToken returns the TaxToken field value if set, zero value otherwise.
func (o *V1TaxTreeRequest) GetTaxToken() string {
	if o == nil || o.TaxToken == nil {
		var ret string
		return ret
	}
	return *o.TaxToken
}

// GetTaxTokenOk returns a tuple with the TaxToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxTreeRequest) GetTaxTokenOk() (*string, bool) {
	if o == nil || o.TaxToken == nil {
		return nil, false
	}
	return o.TaxToken, true
}

// HasTaxToken returns a boolean if a field has been set.
func (o *V1TaxTreeRequest) HasTaxToken() bool {
	if o != nil && o.TaxToken != nil {
		return true
	}

	return false
}

// SetTaxToken gets a reference to the given string and assigns it to the TaxToken field.
func (o *V1TaxTreeRequest) SetTaxToken(v string) {
	o.TaxToken = &v
}

// GetTaxon returns the Taxon field value if set, zero value otherwise.
func (o *V1TaxTreeRequest) GetTaxon() string {
	if o == nil || o.Taxon == nil {
		var ret string
		return ret
	}
	return *o.Taxon
}

// GetTaxonOk returns a tuple with the Taxon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxTreeRequest) GetTaxonOk() (*string, bool) {
	if o == nil || o.Taxon == nil {
		return nil, false
	}
	return o.Taxon, true
}

// HasTaxon returns a boolean if a field has been set.
func (o *V1TaxTreeRequest) HasTaxon() bool {
	if o != nil && o.Taxon != nil {
		return true
	}

	return false
}

// SetTaxon gets a reference to the given string and assigns it to the Taxon field.
func (o *V1TaxTreeRequest) SetTaxon(v string) {
	o.Taxon = &v
}

// GetChildrenOnly returns the ChildrenOnly field value if set, zero value otherwise.
func (o *V1TaxTreeRequest) GetChildrenOnly() bool {
	if o == nil || o.ChildrenOnly == nil {
		var ret bool
		return ret
	}
	return *o.ChildrenOnly
}

// GetChildrenOnlyOk returns a tuple with the ChildrenOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxTreeRequest) GetChildrenOnlyOk() (*bool, bool) {
	if o == nil || o.ChildrenOnly == nil {
		return nil, false
	}
	return o.ChildrenOnly, true
}

// HasChildrenOnly returns a boolean if a field has been set.
func (o *V1TaxTreeRequest) HasChildrenOnly() bool {
	if o != nil && o.ChildrenOnly != nil {
		return true
	}

	return false
}

// SetChildrenOnly gets a reference to the given bool and assigns it to the ChildrenOnly field.
func (o *V1TaxTreeRequest) SetChildrenOnly(v bool) {
	o.ChildrenOnly = &v
}

func (o V1TaxTreeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TaxId != nil  {
		toSerialize["tax_id"] = o.TaxId
	}
	if o.TaxToken != nil  {
		toSerialize["tax_token"] = o.TaxToken
	}
	if o.Taxon != nil  {
		toSerialize["taxon"] = o.Taxon
	}
	if o.ChildrenOnly != nil  {
		toSerialize["children_only"] = o.ChildrenOnly
	}
	return json.Marshal(toSerialize)
}

type NullableV1TaxTreeRequest struct {
	value *V1TaxTreeRequest
	isSet bool
}

func (v NullableV1TaxTreeRequest) Get() *V1TaxTreeRequest {
	return v.value
}

func (v *NullableV1TaxTreeRequest) Set(val *V1TaxTreeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TaxTreeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TaxTreeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TaxTreeRequest(val *V1TaxTreeRequest) *NullableV1TaxTreeRequest {
	return &NullableV1TaxTreeRequest{value: val, isSet: true}
}

func (v NullableV1TaxTreeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TaxTreeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



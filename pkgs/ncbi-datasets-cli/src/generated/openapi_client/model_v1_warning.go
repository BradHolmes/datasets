/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 1 API is considred stable and will not be subject to breaking changes. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1Warning struct for V1Warning
type V1Warning struct {
	GeneWarningCode *V1WarningGeneWarningCode `json:"gene_warning_code,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Message *string `json:"message,omitempty"`
	ReplacedId *V1WarningReplacedId `json:"replaced_id,omitempty"`
	UnrecognizedIdentifier *string `json:"unrecognized_identifier,omitempty"`
}

// NewV1Warning instantiates a new V1Warning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Warning() *V1Warning {
	this := V1Warning{}
	var geneWarningCode V1WarningGeneWarningCode = V1WARNINGGENEWARNINGCODE_UNKNOWN_GENE_WARNING_CODE
	this.GeneWarningCode = &geneWarningCode
	return &this
}

// NewV1WarningWithDefaults instantiates a new V1Warning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1WarningWithDefaults() *V1Warning {
	this := V1Warning{}
	var geneWarningCode V1WarningGeneWarningCode = V1WARNINGGENEWARNINGCODE_UNKNOWN_GENE_WARNING_CODE
	this.GeneWarningCode = &geneWarningCode
	return &this
}

// GetGeneWarningCode returns the GeneWarningCode field value if set, zero value otherwise.
func (o *V1Warning) GetGeneWarningCode() V1WarningGeneWarningCode {
	if o == nil || o.GeneWarningCode == nil {
		var ret V1WarningGeneWarningCode
		return ret
	}
	return *o.GeneWarningCode
}

// GetGeneWarningCodeOk returns a tuple with the GeneWarningCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Warning) GetGeneWarningCodeOk() (*V1WarningGeneWarningCode, bool) {
	if o == nil || o.GeneWarningCode == nil {
		return nil, false
	}
	return o.GeneWarningCode, true
}

// HasGeneWarningCode returns a boolean if a field has been set.
func (o *V1Warning) HasGeneWarningCode() bool {
	if o != nil && o.GeneWarningCode != nil {
		return true
	}

	return false
}

// SetGeneWarningCode gets a reference to the given V1WarningGeneWarningCode and assigns it to the GeneWarningCode field.
func (o *V1Warning) SetGeneWarningCode(v V1WarningGeneWarningCode) {
	o.GeneWarningCode = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *V1Warning) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Warning) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *V1Warning) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *V1Warning) SetReason(v string) {
	o.Reason = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *V1Warning) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Warning) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *V1Warning) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *V1Warning) SetMessage(v string) {
	o.Message = &v
}

// GetReplacedId returns the ReplacedId field value if set, zero value otherwise.
func (o *V1Warning) GetReplacedId() V1WarningReplacedId {
	if o == nil || o.ReplacedId == nil {
		var ret V1WarningReplacedId
		return ret
	}
	return *o.ReplacedId
}

// GetReplacedIdOk returns a tuple with the ReplacedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Warning) GetReplacedIdOk() (*V1WarningReplacedId, bool) {
	if o == nil || o.ReplacedId == nil {
		return nil, false
	}
	return o.ReplacedId, true
}

// HasReplacedId returns a boolean if a field has been set.
func (o *V1Warning) HasReplacedId() bool {
	if o != nil && o.ReplacedId != nil {
		return true
	}

	return false
}

// SetReplacedId gets a reference to the given V1WarningReplacedId and assigns it to the ReplacedId field.
func (o *V1Warning) SetReplacedId(v V1WarningReplacedId) {
	o.ReplacedId = &v
}

// GetUnrecognizedIdentifier returns the UnrecognizedIdentifier field value if set, zero value otherwise.
func (o *V1Warning) GetUnrecognizedIdentifier() string {
	if o == nil || o.UnrecognizedIdentifier == nil {
		var ret string
		return ret
	}
	return *o.UnrecognizedIdentifier
}

// GetUnrecognizedIdentifierOk returns a tuple with the UnrecognizedIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Warning) GetUnrecognizedIdentifierOk() (*string, bool) {
	if o == nil || o.UnrecognizedIdentifier == nil {
		return nil, false
	}
	return o.UnrecognizedIdentifier, true
}

// HasUnrecognizedIdentifier returns a boolean if a field has been set.
func (o *V1Warning) HasUnrecognizedIdentifier() bool {
	if o != nil && o.UnrecognizedIdentifier != nil {
		return true
	}

	return false
}

// SetUnrecognizedIdentifier gets a reference to the given string and assigns it to the UnrecognizedIdentifier field.
func (o *V1Warning) SetUnrecognizedIdentifier(v string) {
	o.UnrecognizedIdentifier = &v
}

func (o V1Warning) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GeneWarningCode != nil  {
		toSerialize["gene_warning_code"] = o.GeneWarningCode
	}
	if o.Reason != nil  {
		toSerialize["reason"] = o.Reason
	}
	if o.Message != nil  {
		toSerialize["message"] = o.Message
	}
	if o.ReplacedId != nil  {
		toSerialize["replaced_id"] = o.ReplacedId
	}
	if o.UnrecognizedIdentifier != nil  {
		toSerialize["unrecognized_identifier"] = o.UnrecognizedIdentifier
	}
	return json.Marshal(toSerialize)
}

type NullableV1Warning struct {
	value *V1Warning
	isSet bool
}

func (v NullableV1Warning) Get() *V1Warning {
	return v.value
}

func (v *NullableV1Warning) Set(val *V1Warning) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Warning) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Warning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Warning(val *V1Warning) *NullableV1Warning {
	return &NullableV1Warning{value: val, isSet: true}
}

func (v NullableV1Warning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Warning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



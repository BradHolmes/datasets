/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1reportsVirusDataReportPage struct for V1reportsVirusDataReportPage
type V1reportsVirusDataReportPage struct {
	Reports *[]V1reportsVirusAssembly `json:"reports,omitempty"`
	TotalCount *int32 `json:"total_count,omitempty"`
	NextPageToken *string `json:"next_page_token,omitempty"`
	ReportType *string `json:"_report_type,omitempty"`
	ReportFields *[]string `json:"_report_fields,omitempty"`
	FirstPage *bool `json:"_first_page,omitempty"`
}

// NewV1reportsVirusDataReportPage instantiates a new V1reportsVirusDataReportPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1reportsVirusDataReportPage() *V1reportsVirusDataReportPage {
	this := V1reportsVirusDataReportPage{}
	return &this
}

// NewV1reportsVirusDataReportPageWithDefaults instantiates a new V1reportsVirusDataReportPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1reportsVirusDataReportPageWithDefaults() *V1reportsVirusDataReportPage {
	this := V1reportsVirusDataReportPage{}
	return &this
}

// GetReports returns the Reports field value if set, zero value otherwise.
func (o *V1reportsVirusDataReportPage) GetReports() []V1reportsVirusAssembly {
	if o == nil || o.Reports == nil {
		var ret []V1reportsVirusAssembly
		return ret
	}
	return *o.Reports
}

// GetReportsOk returns a tuple with the Reports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsVirusDataReportPage) GetReportsOk() (*[]V1reportsVirusAssembly, bool) {
	if o == nil || o.Reports == nil {
		return nil, false
	}
	return o.Reports, true
}

// HasReports returns a boolean if a field has been set.
func (o *V1reportsVirusDataReportPage) HasReports() bool {
	if o != nil && o.Reports != nil {
		return true
	}

	return false
}

// SetReports gets a reference to the given []V1reportsVirusAssembly and assigns it to the Reports field.
func (o *V1reportsVirusDataReportPage) SetReports(v []V1reportsVirusAssembly) {
	o.Reports = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *V1reportsVirusDataReportPage) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsVirusDataReportPage) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *V1reportsVirusDataReportPage) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *V1reportsVirusDataReportPage) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *V1reportsVirusDataReportPage) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsVirusDataReportPage) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *V1reportsVirusDataReportPage) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *V1reportsVirusDataReportPage) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *V1reportsVirusDataReportPage) GetReportType() string {
	if o == nil || o.ReportType == nil {
		var ret string
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsVirusDataReportPage) GetReportTypeOk() (*string, bool) {
	if o == nil || o.ReportType == nil {
		return nil, false
	}
	return o.ReportType, true
}

// HasReportType returns a boolean if a field has been set.
func (o *V1reportsVirusDataReportPage) HasReportType() bool {
	if o != nil && o.ReportType != nil {
		return true
	}

	return false
}

// SetReportType gets a reference to the given string and assigns it to the ReportType field.
func (o *V1reportsVirusDataReportPage) SetReportType(v string) {
	o.ReportType = &v
}

// GetReportFields returns the ReportFields field value if set, zero value otherwise.
func (o *V1reportsVirusDataReportPage) GetReportFields() []string {
	if o == nil || o.ReportFields == nil {
		var ret []string
		return ret
	}
	return *o.ReportFields
}

// GetReportFieldsOk returns a tuple with the ReportFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsVirusDataReportPage) GetReportFieldsOk() (*[]string, bool) {
	if o == nil || o.ReportFields == nil {
		return nil, false
	}
	return o.ReportFields, true
}

// HasReportFields returns a boolean if a field has been set.
func (o *V1reportsVirusDataReportPage) HasReportFields() bool {
	if o != nil && o.ReportFields != nil {
		return true
	}

	return false
}

// SetReportFields gets a reference to the given []string and assigns it to the ReportFields field.
func (o *V1reportsVirusDataReportPage) SetReportFields(v []string) {
	o.ReportFields = &v
}

// GetFirstPage returns the FirstPage field value if set, zero value otherwise.
func (o *V1reportsVirusDataReportPage) GetFirstPage() bool {
	if o == nil || o.FirstPage == nil {
		var ret bool
		return ret
	}
	return *o.FirstPage
}

// GetFirstPageOk returns a tuple with the FirstPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsVirusDataReportPage) GetFirstPageOk() (*bool, bool) {
	if o == nil || o.FirstPage == nil {
		return nil, false
	}
	return o.FirstPage, true
}

// HasFirstPage returns a boolean if a field has been set.
func (o *V1reportsVirusDataReportPage) HasFirstPage() bool {
	if o != nil && o.FirstPage != nil {
		return true
	}

	return false
}

// SetFirstPage gets a reference to the given bool and assigns it to the FirstPage field.
func (o *V1reportsVirusDataReportPage) SetFirstPage(v bool) {
	o.FirstPage = &v
}

func (o V1reportsVirusDataReportPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reports != nil && len(o.GetReports()) > 0  {
		toSerialize["reports"] = o.Reports
	}
	if o.TotalCount != nil  {
		toSerialize["total_count"] = o.TotalCount
	}
	if o.NextPageToken != nil  {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	if o.ReportType != nil  {
		toSerialize["_report_type"] = o.ReportType
	}
	if o.ReportFields != nil && len(o.GetReportFields()) > 0  {
		toSerialize["_report_fields"] = o.ReportFields
	}
	if o.FirstPage != nil  {
		toSerialize["_first_page"] = o.FirstPage
	}
	return json.Marshal(toSerialize)
}

type NullableV1reportsVirusDataReportPage struct {
	value *V1reportsVirusDataReportPage
	isSet bool
}

func (v NullableV1reportsVirusDataReportPage) Get() *V1reportsVirusDataReportPage {
	return v.value
}

func (v *NullableV1reportsVirusDataReportPage) Set(val *V1reportsVirusDataReportPage) {
	v.value = val
	v.isSet = true
}

func (v NullableV1reportsVirusDataReportPage) IsSet() bool {
	return v.isSet
}

func (v *NullableV1reportsVirusDataReportPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1reportsVirusDataReportPage(val *V1reportsVirusDataReportPage) *NullableV1reportsVirusDataReportPage {
	return &NullableV1reportsVirusDataReportPage{value: val, isSet: true}
}

func (v NullableV1reportsVirusDataReportPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1reportsVirusDataReportPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



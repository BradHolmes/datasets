/*
 * NCBI Datasets API
 *
 * ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1GeneDatasetRequestGeneIds struct for V1GeneDatasetRequestGeneIds
type V1GeneDatasetRequestGeneIds struct {
	GeneIds *[]int32 `json:"gene_ids,omitempty"`
}

// NewV1GeneDatasetRequestGeneIds instantiates a new V1GeneDatasetRequestGeneIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GeneDatasetRequestGeneIds() *V1GeneDatasetRequestGeneIds {
	this := V1GeneDatasetRequestGeneIds{}
	return &this
}

// NewV1GeneDatasetRequestGeneIdsWithDefaults instantiates a new V1GeneDatasetRequestGeneIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GeneDatasetRequestGeneIdsWithDefaults() *V1GeneDatasetRequestGeneIds {
	this := V1GeneDatasetRequestGeneIds{}
	return &this
}

// GetGeneIds returns the GeneIds field value if set, zero value otherwise.
func (o *V1GeneDatasetRequestGeneIds) GetGeneIds() []int32 {
	if o == nil || o.GeneIds == nil {
		var ret []int32
		return ret
	}
	return *o.GeneIds
}

// GetGeneIdsOk returns a tuple with the GeneIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequestGeneIds) GetGeneIdsOk() (*[]int32, bool) {
	if o == nil || o.GeneIds == nil {
		return nil, false
	}
	return o.GeneIds, true
}

// HasGeneIds returns a boolean if a field has been set.
func (o *V1GeneDatasetRequestGeneIds) HasGeneIds() bool {
	if o != nil && o.GeneIds != nil {
		return true
	}

	return false
}

// SetGeneIds gets a reference to the given []int32 and assigns it to the GeneIds field.
func (o *V1GeneDatasetRequestGeneIds) SetGeneIds(v []int32) {
	o.GeneIds = &v
}

func (o V1GeneDatasetRequestGeneIds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GeneIds != nil && len(o.GetGeneIds()) > 0  {
		toSerialize["gene_ids"] = o.GeneIds
	}
	return json.Marshal(toSerialize)
}

type NullableV1GeneDatasetRequestGeneIds struct {
	value *V1GeneDatasetRequestGeneIds
	isSet bool
}

func (v NullableV1GeneDatasetRequestGeneIds) Get() *V1GeneDatasetRequestGeneIds {
	return v.value
}

func (v *NullableV1GeneDatasetRequestGeneIds) Set(val *V1GeneDatasetRequestGeneIds) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GeneDatasetRequestGeneIds) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GeneDatasetRequestGeneIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GeneDatasetRequestGeneIds(val *V1GeneDatasetRequestGeneIds) *NullableV1GeneDatasetRequestGeneIds {
	return &NullableV1GeneDatasetRequestGeneIds{value: val, isSet: true}
}

func (v NullableV1GeneDatasetRequestGeneIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GeneDatasetRequestGeneIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



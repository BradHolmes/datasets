/*
 * NCBI Datasets API
 *
 * ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1reportsSeqRangeSet struct for V1reportsSeqRangeSet
type V1reportsSeqRangeSet struct {
	AccessionVersion *string `json:"accession_version,omitempty"`
	Range *[]V1reportsRange `json:"range,omitempty"`
}

// NewV1reportsSeqRangeSet instantiates a new V1reportsSeqRangeSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1reportsSeqRangeSet() *V1reportsSeqRangeSet {
	this := V1reportsSeqRangeSet{}
	return &this
}

// NewV1reportsSeqRangeSetWithDefaults instantiates a new V1reportsSeqRangeSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1reportsSeqRangeSetWithDefaults() *V1reportsSeqRangeSet {
	this := V1reportsSeqRangeSet{}
	return &this
}

// GetAccessionVersion returns the AccessionVersion field value if set, zero value otherwise.
func (o *V1reportsSeqRangeSet) GetAccessionVersion() string {
	if o == nil || o.AccessionVersion == nil {
		var ret string
		return ret
	}
	return *o.AccessionVersion
}

// GetAccessionVersionOk returns a tuple with the AccessionVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSeqRangeSet) GetAccessionVersionOk() (*string, bool) {
	if o == nil || o.AccessionVersion == nil {
		return nil, false
	}
	return o.AccessionVersion, true
}

// HasAccessionVersion returns a boolean if a field has been set.
func (o *V1reportsSeqRangeSet) HasAccessionVersion() bool {
	if o != nil && o.AccessionVersion != nil {
		return true
	}

	return false
}

// SetAccessionVersion gets a reference to the given string and assigns it to the AccessionVersion field.
func (o *V1reportsSeqRangeSet) SetAccessionVersion(v string) {
	o.AccessionVersion = &v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *V1reportsSeqRangeSet) GetRange() []V1reportsRange {
	if o == nil || o.Range == nil {
		var ret []V1reportsRange
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsSeqRangeSet) GetRangeOk() (*[]V1reportsRange, bool) {
	if o == nil || o.Range == nil {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *V1reportsSeqRangeSet) HasRange() bool {
	if o != nil && o.Range != nil {
		return true
	}

	return false
}

// SetRange gets a reference to the given []V1reportsRange and assigns it to the Range field.
func (o *V1reportsSeqRangeSet) SetRange(v []V1reportsRange) {
	o.Range = &v
}

func (o V1reportsSeqRangeSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessionVersion != nil  {
		toSerialize["accession_version"] = o.AccessionVersion
	}
	if o.Range != nil && len(o.GetRange()) > 0  {
		toSerialize["range"] = o.Range
	}
	return json.Marshal(toSerialize)
}

type NullableV1reportsSeqRangeSet struct {
	value *V1reportsSeqRangeSet
	isSet bool
}

func (v NullableV1reportsSeqRangeSet) Get() *V1reportsSeqRangeSet {
	return v.value
}

func (v *NullableV1reportsSeqRangeSet) Set(val *V1reportsSeqRangeSet) {
	v.value = val
	v.isSet = true
}

func (v NullableV1reportsSeqRangeSet) IsSet() bool {
	return v.isSet
}

func (v *NullableV1reportsSeqRangeSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1reportsSeqRangeSet(val *V1reportsSeqRangeSet) *NullableV1reportsSeqRangeSet {
	return &NullableV1reportsSeqRangeSet{value: val, isSet: true}
}

func (v NullableV1reportsSeqRangeSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1reportsSeqRangeSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 1 API is considred stable and will not be subject to breaking changes. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1AssemblyDatasetDescriptorChromosome struct for V1AssemblyDatasetDescriptorChromosome
type V1AssemblyDatasetDescriptorChromosome struct {
	Name *string `json:"name,omitempty"`
	Length *string `json:"length,omitempty"`
	AccessionVersion *string `json:"accession_version,omitempty"`
	GcCount *string `json:"gc_count,omitempty"`
}

// NewV1AssemblyDatasetDescriptorChromosome instantiates a new V1AssemblyDatasetDescriptorChromosome object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AssemblyDatasetDescriptorChromosome() *V1AssemblyDatasetDescriptorChromosome {
	this := V1AssemblyDatasetDescriptorChromosome{}
	return &this
}

// NewV1AssemblyDatasetDescriptorChromosomeWithDefaults instantiates a new V1AssemblyDatasetDescriptorChromosome object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AssemblyDatasetDescriptorChromosomeWithDefaults() *V1AssemblyDatasetDescriptorChromosome {
	this := V1AssemblyDatasetDescriptorChromosome{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1AssemblyDatasetDescriptorChromosome) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AssemblyDatasetDescriptorChromosome) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1AssemblyDatasetDescriptorChromosome) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1AssemblyDatasetDescriptorChromosome) SetName(v string) {
	o.Name = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *V1AssemblyDatasetDescriptorChromosome) GetLength() string {
	if o == nil || o.Length == nil {
		var ret string
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AssemblyDatasetDescriptorChromosome) GetLengthOk() (*string, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *V1AssemblyDatasetDescriptorChromosome) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given string and assigns it to the Length field.
func (o *V1AssemblyDatasetDescriptorChromosome) SetLength(v string) {
	o.Length = &v
}

// GetAccessionVersion returns the AccessionVersion field value if set, zero value otherwise.
func (o *V1AssemblyDatasetDescriptorChromosome) GetAccessionVersion() string {
	if o == nil || o.AccessionVersion == nil {
		var ret string
		return ret
	}
	return *o.AccessionVersion
}

// GetAccessionVersionOk returns a tuple with the AccessionVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AssemblyDatasetDescriptorChromosome) GetAccessionVersionOk() (*string, bool) {
	if o == nil || o.AccessionVersion == nil {
		return nil, false
	}
	return o.AccessionVersion, true
}

// HasAccessionVersion returns a boolean if a field has been set.
func (o *V1AssemblyDatasetDescriptorChromosome) HasAccessionVersion() bool {
	if o != nil && o.AccessionVersion != nil {
		return true
	}

	return false
}

// SetAccessionVersion gets a reference to the given string and assigns it to the AccessionVersion field.
func (o *V1AssemblyDatasetDescriptorChromosome) SetAccessionVersion(v string) {
	o.AccessionVersion = &v
}

// GetGcCount returns the GcCount field value if set, zero value otherwise.
func (o *V1AssemblyDatasetDescriptorChromosome) GetGcCount() string {
	if o == nil || o.GcCount == nil {
		var ret string
		return ret
	}
	return *o.GcCount
}

// GetGcCountOk returns a tuple with the GcCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AssemblyDatasetDescriptorChromosome) GetGcCountOk() (*string, bool) {
	if o == nil || o.GcCount == nil {
		return nil, false
	}
	return o.GcCount, true
}

// HasGcCount returns a boolean if a field has been set.
func (o *V1AssemblyDatasetDescriptorChromosome) HasGcCount() bool {
	if o != nil && o.GcCount != nil {
		return true
	}

	return false
}

// SetGcCount gets a reference to the given string and assigns it to the GcCount field.
func (o *V1AssemblyDatasetDescriptorChromosome) SetGcCount(v string) {
	o.GcCount = &v
}

func (o V1AssemblyDatasetDescriptorChromosome) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil  {
		toSerialize["name"] = o.Name
	}
	if o.Length != nil  {
		toSerialize["length"] = o.Length
	}
	if o.AccessionVersion != nil  {
		toSerialize["accession_version"] = o.AccessionVersion
	}
	if o.GcCount != nil  {
		toSerialize["gc_count"] = o.GcCount
	}
	return json.Marshal(toSerialize)
}

type NullableV1AssemblyDatasetDescriptorChromosome struct {
	value *V1AssemblyDatasetDescriptorChromosome
	isSet bool
}

func (v NullableV1AssemblyDatasetDescriptorChromosome) Get() *V1AssemblyDatasetDescriptorChromosome {
	return v.value
}

func (v *NullableV1AssemblyDatasetDescriptorChromosome) Set(val *V1AssemblyDatasetDescriptorChromosome) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AssemblyDatasetDescriptorChromosome) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AssemblyDatasetDescriptorChromosome) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AssemblyDatasetDescriptorChromosome(val *V1AssemblyDatasetDescriptorChromosome) *NullableV1AssemblyDatasetDescriptorChromosome {
	return &NullableV1AssemblyDatasetDescriptorChromosome{value: val, isSet: true}
}

func (v NullableV1AssemblyDatasetDescriptorChromosome) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AssemblyDatasetDescriptorChromosome) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



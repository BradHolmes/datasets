/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/v1/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1TaxonomyFilteredSubtreeResponseEdge struct for V1TaxonomyFilteredSubtreeResponseEdge
type V1TaxonomyFilteredSubtreeResponseEdge struct {
	VisibleChildren *[]int32 `json:"visible_children,omitempty"`
	ChildrenStatus *V1TaxonomyFilteredSubtreeResponseEdgeChildStatus `json:"children_status,omitempty"`
}

// NewV1TaxonomyFilteredSubtreeResponseEdge instantiates a new V1TaxonomyFilteredSubtreeResponseEdge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TaxonomyFilteredSubtreeResponseEdge() *V1TaxonomyFilteredSubtreeResponseEdge {
	this := V1TaxonomyFilteredSubtreeResponseEdge{}
	var childrenStatus V1TaxonomyFilteredSubtreeResponseEdgeChildStatus = V1TAXONOMYFILTEREDSUBTREERESPONSEEDGECHILDSTATUS_UNSPECIFIED
	this.ChildrenStatus = &childrenStatus
	return &this
}

// NewV1TaxonomyFilteredSubtreeResponseEdgeWithDefaults instantiates a new V1TaxonomyFilteredSubtreeResponseEdge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TaxonomyFilteredSubtreeResponseEdgeWithDefaults() *V1TaxonomyFilteredSubtreeResponseEdge {
	this := V1TaxonomyFilteredSubtreeResponseEdge{}
	var childrenStatus V1TaxonomyFilteredSubtreeResponseEdgeChildStatus = V1TAXONOMYFILTEREDSUBTREERESPONSEEDGECHILDSTATUS_UNSPECIFIED
	this.ChildrenStatus = &childrenStatus
	return &this
}

// GetVisibleChildren returns the VisibleChildren field value if set, zero value otherwise.
func (o *V1TaxonomyFilteredSubtreeResponseEdge) GetVisibleChildren() []int32 {
	if o == nil || o.VisibleChildren == nil {
		var ret []int32
		return ret
	}
	return *o.VisibleChildren
}

// GetVisibleChildrenOk returns a tuple with the VisibleChildren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxonomyFilteredSubtreeResponseEdge) GetVisibleChildrenOk() (*[]int32, bool) {
	if o == nil || o.VisibleChildren == nil {
		return nil, false
	}
	return o.VisibleChildren, true
}

// HasVisibleChildren returns a boolean if a field has been set.
func (o *V1TaxonomyFilteredSubtreeResponseEdge) HasVisibleChildren() bool {
	if o != nil && o.VisibleChildren != nil {
		return true
	}

	return false
}

// SetVisibleChildren gets a reference to the given []int32 and assigns it to the VisibleChildren field.
func (o *V1TaxonomyFilteredSubtreeResponseEdge) SetVisibleChildren(v []int32) {
	o.VisibleChildren = &v
}

// GetChildrenStatus returns the ChildrenStatus field value if set, zero value otherwise.
func (o *V1TaxonomyFilteredSubtreeResponseEdge) GetChildrenStatus() V1TaxonomyFilteredSubtreeResponseEdgeChildStatus {
	if o == nil || o.ChildrenStatus == nil {
		var ret V1TaxonomyFilteredSubtreeResponseEdgeChildStatus
		return ret
	}
	return *o.ChildrenStatus
}

// GetChildrenStatusOk returns a tuple with the ChildrenStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TaxonomyFilteredSubtreeResponseEdge) GetChildrenStatusOk() (*V1TaxonomyFilteredSubtreeResponseEdgeChildStatus, bool) {
	if o == nil || o.ChildrenStatus == nil {
		return nil, false
	}
	return o.ChildrenStatus, true
}

// HasChildrenStatus returns a boolean if a field has been set.
func (o *V1TaxonomyFilteredSubtreeResponseEdge) HasChildrenStatus() bool {
	if o != nil && o.ChildrenStatus != nil {
		return true
	}

	return false
}

// SetChildrenStatus gets a reference to the given V1TaxonomyFilteredSubtreeResponseEdgeChildStatus and assigns it to the ChildrenStatus field.
func (o *V1TaxonomyFilteredSubtreeResponseEdge) SetChildrenStatus(v V1TaxonomyFilteredSubtreeResponseEdgeChildStatus) {
	o.ChildrenStatus = &v
}

func (o V1TaxonomyFilteredSubtreeResponseEdge) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VisibleChildren != nil && len(o.GetVisibleChildren()) > 0  {
		toSerialize["visible_children"] = o.VisibleChildren
	}
	if o.ChildrenStatus != nil  {
		toSerialize["children_status"] = o.ChildrenStatus
	}
	return json.Marshal(toSerialize)
}

type NullableV1TaxonomyFilteredSubtreeResponseEdge struct {
	value *V1TaxonomyFilteredSubtreeResponseEdge
	isSet bool
}

func (v NullableV1TaxonomyFilteredSubtreeResponseEdge) Get() *V1TaxonomyFilteredSubtreeResponseEdge {
	return v.value
}

func (v *NullableV1TaxonomyFilteredSubtreeResponseEdge) Set(val *V1TaxonomyFilteredSubtreeResponseEdge) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TaxonomyFilteredSubtreeResponseEdge) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TaxonomyFilteredSubtreeResponseEdge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TaxonomyFilteredSubtreeResponseEdge(val *V1TaxonomyFilteredSubtreeResponseEdge) *NullableV1TaxonomyFilteredSubtreeResponseEdge {
	return &NullableV1TaxonomyFilteredSubtreeResponseEdge{value: val, isSet: true}
}

func (v NullableV1TaxonomyFilteredSubtreeResponseEdge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TaxonomyFilteredSubtreeResponseEdge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * NCBI Datasets API
 *
 * ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1reportsGenomicRegion struct for V1reportsGenomicRegion
type V1reportsGenomicRegion struct {
	GeneRange *V1reportsSeqRangeSet `json:"gene_range,omitempty"`
	Type *V1reportsGenomicRegionGenomicRegionType `json:"type,omitempty"`
}

// NewV1reportsGenomicRegion instantiates a new V1reportsGenomicRegion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1reportsGenomicRegion() *V1reportsGenomicRegion {
	this := V1reportsGenomicRegion{}
	var type_ V1reportsGenomicRegionGenomicRegionType = V1REPORTSGENOMICREGIONGENOMICREGIONTYPE_UNKNOWN
	this.Type = &type_
	return &this
}

// NewV1reportsGenomicRegionWithDefaults instantiates a new V1reportsGenomicRegion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1reportsGenomicRegionWithDefaults() *V1reportsGenomicRegion {
	this := V1reportsGenomicRegion{}
	var type_ V1reportsGenomicRegionGenomicRegionType = V1REPORTSGENOMICREGIONGENOMICREGIONTYPE_UNKNOWN
	this.Type = &type_
	return &this
}

// GetGeneRange returns the GeneRange field value if set, zero value otherwise.
func (o *V1reportsGenomicRegion) GetGeneRange() V1reportsSeqRangeSet {
	if o == nil || o.GeneRange == nil {
		var ret V1reportsSeqRangeSet
		return ret
	}
	return *o.GeneRange
}

// GetGeneRangeOk returns a tuple with the GeneRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsGenomicRegion) GetGeneRangeOk() (*V1reportsSeqRangeSet, bool) {
	if o == nil || o.GeneRange == nil {
		return nil, false
	}
	return o.GeneRange, true
}

// HasGeneRange returns a boolean if a field has been set.
func (o *V1reportsGenomicRegion) HasGeneRange() bool {
	if o != nil && o.GeneRange != nil {
		return true
	}

	return false
}

// SetGeneRange gets a reference to the given V1reportsSeqRangeSet and assigns it to the GeneRange field.
func (o *V1reportsGenomicRegion) SetGeneRange(v V1reportsSeqRangeSet) {
	o.GeneRange = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1reportsGenomicRegion) GetType() V1reportsGenomicRegionGenomicRegionType {
	if o == nil || o.Type == nil {
		var ret V1reportsGenomicRegionGenomicRegionType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsGenomicRegion) GetTypeOk() (*V1reportsGenomicRegionGenomicRegionType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1reportsGenomicRegion) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given V1reportsGenomicRegionGenomicRegionType and assigns it to the Type field.
func (o *V1reportsGenomicRegion) SetType(v V1reportsGenomicRegionGenomicRegionType) {
	o.Type = &v
}

func (o V1reportsGenomicRegion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GeneRange != nil  {
		toSerialize["gene_range"] = o.GeneRange
	}
	if o.Type != nil  {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableV1reportsGenomicRegion struct {
	value *V1reportsGenomicRegion
	isSet bool
}

func (v NullableV1reportsGenomicRegion) Get() *V1reportsGenomicRegion {
	return v.value
}

func (v *NullableV1reportsGenomicRegion) Set(val *V1reportsGenomicRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableV1reportsGenomicRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableV1reportsGenomicRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1reportsGenomicRegion(val *V1reportsGenomicRegion) *NullableV1reportsGenomicRegion {
	return &NullableV1reportsGenomicRegion{value: val, isSet: true}
}

func (v NullableV1reportsGenomicRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1reportsGenomicRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



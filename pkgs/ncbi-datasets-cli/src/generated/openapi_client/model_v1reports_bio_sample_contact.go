/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1reportsBioSampleContact struct for V1reportsBioSampleContact
type V1reportsBioSampleContact struct {
	Lab *string `json:"lab,omitempty"`
}

// NewV1reportsBioSampleContact instantiates a new V1reportsBioSampleContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1reportsBioSampleContact() *V1reportsBioSampleContact {
	this := V1reportsBioSampleContact{}
	return &this
}

// NewV1reportsBioSampleContactWithDefaults instantiates a new V1reportsBioSampleContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1reportsBioSampleContactWithDefaults() *V1reportsBioSampleContact {
	this := V1reportsBioSampleContact{}
	return &this
}

// GetLab returns the Lab field value if set, zero value otherwise.
func (o *V1reportsBioSampleContact) GetLab() string {
	if o == nil || o.Lab == nil {
		var ret string
		return ret
	}
	return *o.Lab
}

// GetLabOk returns a tuple with the Lab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1reportsBioSampleContact) GetLabOk() (*string, bool) {
	if o == nil || o.Lab == nil {
		return nil, false
	}
	return o.Lab, true
}

// HasLab returns a boolean if a field has been set.
func (o *V1reportsBioSampleContact) HasLab() bool {
	if o != nil && o.Lab != nil {
		return true
	}

	return false
}

// SetLab gets a reference to the given string and assigns it to the Lab field.
func (o *V1reportsBioSampleContact) SetLab(v string) {
	o.Lab = &v
}

func (o V1reportsBioSampleContact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Lab != nil  {
		toSerialize["lab"] = o.Lab
	}
	return json.Marshal(toSerialize)
}

type NullableV1reportsBioSampleContact struct {
	value *V1reportsBioSampleContact
	isSet bool
}

func (v NullableV1reportsBioSampleContact) Get() *V1reportsBioSampleContact {
	return v.value
}

func (v *NullableV1reportsBioSampleContact) Set(val *V1reportsBioSampleContact) {
	v.value = val
	v.isSet = true
}

func (v NullableV1reportsBioSampleContact) IsSet() bool {
	return v.isSet
}

func (v *NullableV1reportsBioSampleContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1reportsBioSampleContact(val *V1reportsBioSampleContact) *NullableV1reportsBioSampleContact {
	return &NullableV1reportsBioSampleContact{value: val, isSet: true}
}

func (v NullableV1reportsBioSampleContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1reportsBioSampleContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



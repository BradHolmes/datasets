/*
 * NCBI Datasets API
 *
 * ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1GeneDatasetRequest struct for V1GeneDatasetRequest
type V1GeneDatasetRequest struct {
	GeneIds *[]int32 `json:"gene_ids,omitempty"`
	Accessions *[]string `json:"accessions,omitempty"`
	SymbolsForTaxon *V1GeneDatasetRequestSymbolsForTaxon `json:"symbols_for_taxon,omitempty"`
	Taxon *string `json:"taxon,omitempty"`
	IncludeAnnotationType *[]V1Fasta `json:"include_annotation_type,omitempty"`
	ReturnedContent *V1GeneDatasetRequestContentType `json:"returned_content,omitempty"`
	SortSchema *V1GeneDatasetRequestSort `json:"sort_schema,omitempty"`
	Limit *string `json:"limit,omitempty"`
	FastaFilter *[]string `json:"fasta_filter,omitempty"`
}

// NewV1GeneDatasetRequest instantiates a new V1GeneDatasetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GeneDatasetRequest() *V1GeneDatasetRequest {
	this := V1GeneDatasetRequest{}
	var returnedContent V1GeneDatasetRequestContentType = V1GENEDATASETREQUESTCONTENTTYPE_COMPLETE
	this.ReturnedContent = &returnedContent
	return &this
}

// NewV1GeneDatasetRequestWithDefaults instantiates a new V1GeneDatasetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GeneDatasetRequestWithDefaults() *V1GeneDatasetRequest {
	this := V1GeneDatasetRequest{}
	var returnedContent V1GeneDatasetRequestContentType = V1GENEDATASETREQUESTCONTENTTYPE_COMPLETE
	this.ReturnedContent = &returnedContent
	return &this
}

// GetGeneIds returns the GeneIds field value if set, zero value otherwise.
func (o *V1GeneDatasetRequest) GetGeneIds() []int32 {
	if o == nil || o.GeneIds == nil {
		var ret []int32
		return ret
	}
	return *o.GeneIds
}

// GetGeneIdsOk returns a tuple with the GeneIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequest) GetGeneIdsOk() (*[]int32, bool) {
	if o == nil || o.GeneIds == nil {
		return nil, false
	}
	return o.GeneIds, true
}

// HasGeneIds returns a boolean if a field has been set.
func (o *V1GeneDatasetRequest) HasGeneIds() bool {
	if o != nil && o.GeneIds != nil {
		return true
	}

	return false
}

// SetGeneIds gets a reference to the given []int32 and assigns it to the GeneIds field.
func (o *V1GeneDatasetRequest) SetGeneIds(v []int32) {
	o.GeneIds = &v
}

// GetAccessions returns the Accessions field value if set, zero value otherwise.
func (o *V1GeneDatasetRequest) GetAccessions() []string {
	if o == nil || o.Accessions == nil {
		var ret []string
		return ret
	}
	return *o.Accessions
}

// GetAccessionsOk returns a tuple with the Accessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequest) GetAccessionsOk() (*[]string, bool) {
	if o == nil || o.Accessions == nil {
		return nil, false
	}
	return o.Accessions, true
}

// HasAccessions returns a boolean if a field has been set.
func (o *V1GeneDatasetRequest) HasAccessions() bool {
	if o != nil && o.Accessions != nil {
		return true
	}

	return false
}

// SetAccessions gets a reference to the given []string and assigns it to the Accessions field.
func (o *V1GeneDatasetRequest) SetAccessions(v []string) {
	o.Accessions = &v
}

// GetSymbolsForTaxon returns the SymbolsForTaxon field value if set, zero value otherwise.
func (o *V1GeneDatasetRequest) GetSymbolsForTaxon() V1GeneDatasetRequestSymbolsForTaxon {
	if o == nil || o.SymbolsForTaxon == nil {
		var ret V1GeneDatasetRequestSymbolsForTaxon
		return ret
	}
	return *o.SymbolsForTaxon
}

// GetSymbolsForTaxonOk returns a tuple with the SymbolsForTaxon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequest) GetSymbolsForTaxonOk() (*V1GeneDatasetRequestSymbolsForTaxon, bool) {
	if o == nil || o.SymbolsForTaxon == nil {
		return nil, false
	}
	return o.SymbolsForTaxon, true
}

// HasSymbolsForTaxon returns a boolean if a field has been set.
func (o *V1GeneDatasetRequest) HasSymbolsForTaxon() bool {
	if o != nil && o.SymbolsForTaxon != nil {
		return true
	}

	return false
}

// SetSymbolsForTaxon gets a reference to the given V1GeneDatasetRequestSymbolsForTaxon and assigns it to the SymbolsForTaxon field.
func (o *V1GeneDatasetRequest) SetSymbolsForTaxon(v V1GeneDatasetRequestSymbolsForTaxon) {
	o.SymbolsForTaxon = &v
}

// GetTaxon returns the Taxon field value if set, zero value otherwise.
func (o *V1GeneDatasetRequest) GetTaxon() string {
	if o == nil || o.Taxon == nil {
		var ret string
		return ret
	}
	return *o.Taxon
}

// GetTaxonOk returns a tuple with the Taxon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequest) GetTaxonOk() (*string, bool) {
	if o == nil || o.Taxon == nil {
		return nil, false
	}
	return o.Taxon, true
}

// HasTaxon returns a boolean if a field has been set.
func (o *V1GeneDatasetRequest) HasTaxon() bool {
	if o != nil && o.Taxon != nil {
		return true
	}

	return false
}

// SetTaxon gets a reference to the given string and assigns it to the Taxon field.
func (o *V1GeneDatasetRequest) SetTaxon(v string) {
	o.Taxon = &v
}

// GetIncludeAnnotationType returns the IncludeAnnotationType field value if set, zero value otherwise.
func (o *V1GeneDatasetRequest) GetIncludeAnnotationType() []V1Fasta {
	if o == nil || o.IncludeAnnotationType == nil {
		var ret []V1Fasta
		return ret
	}
	return *o.IncludeAnnotationType
}

// GetIncludeAnnotationTypeOk returns a tuple with the IncludeAnnotationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequest) GetIncludeAnnotationTypeOk() (*[]V1Fasta, bool) {
	if o == nil || o.IncludeAnnotationType == nil {
		return nil, false
	}
	return o.IncludeAnnotationType, true
}

// HasIncludeAnnotationType returns a boolean if a field has been set.
func (o *V1GeneDatasetRequest) HasIncludeAnnotationType() bool {
	if o != nil && o.IncludeAnnotationType != nil {
		return true
	}

	return false
}

// SetIncludeAnnotationType gets a reference to the given []V1Fasta and assigns it to the IncludeAnnotationType field.
func (o *V1GeneDatasetRequest) SetIncludeAnnotationType(v []V1Fasta) {
	o.IncludeAnnotationType = &v
}

// GetReturnedContent returns the ReturnedContent field value if set, zero value otherwise.
func (o *V1GeneDatasetRequest) GetReturnedContent() V1GeneDatasetRequestContentType {
	if o == nil || o.ReturnedContent == nil {
		var ret V1GeneDatasetRequestContentType
		return ret
	}
	return *o.ReturnedContent
}

// GetReturnedContentOk returns a tuple with the ReturnedContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequest) GetReturnedContentOk() (*V1GeneDatasetRequestContentType, bool) {
	if o == nil || o.ReturnedContent == nil {
		return nil, false
	}
	return o.ReturnedContent, true
}

// HasReturnedContent returns a boolean if a field has been set.
func (o *V1GeneDatasetRequest) HasReturnedContent() bool {
	if o != nil && o.ReturnedContent != nil {
		return true
	}

	return false
}

// SetReturnedContent gets a reference to the given V1GeneDatasetRequestContentType and assigns it to the ReturnedContent field.
func (o *V1GeneDatasetRequest) SetReturnedContent(v V1GeneDatasetRequestContentType) {
	o.ReturnedContent = &v
}

// GetSortSchema returns the SortSchema field value if set, zero value otherwise.
func (o *V1GeneDatasetRequest) GetSortSchema() V1GeneDatasetRequestSort {
	if o == nil || o.SortSchema == nil {
		var ret V1GeneDatasetRequestSort
		return ret
	}
	return *o.SortSchema
}

// GetSortSchemaOk returns a tuple with the SortSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequest) GetSortSchemaOk() (*V1GeneDatasetRequestSort, bool) {
	if o == nil || o.SortSchema == nil {
		return nil, false
	}
	return o.SortSchema, true
}

// HasSortSchema returns a boolean if a field has been set.
func (o *V1GeneDatasetRequest) HasSortSchema() bool {
	if o != nil && o.SortSchema != nil {
		return true
	}

	return false
}

// SetSortSchema gets a reference to the given V1GeneDatasetRequestSort and assigns it to the SortSchema field.
func (o *V1GeneDatasetRequest) SetSortSchema(v V1GeneDatasetRequestSort) {
	o.SortSchema = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *V1GeneDatasetRequest) GetLimit() string {
	if o == nil || o.Limit == nil {
		var ret string
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequest) GetLimitOk() (*string, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *V1GeneDatasetRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given string and assigns it to the Limit field.
func (o *V1GeneDatasetRequest) SetLimit(v string) {
	o.Limit = &v
}

// GetFastaFilter returns the FastaFilter field value if set, zero value otherwise.
func (o *V1GeneDatasetRequest) GetFastaFilter() []string {
	if o == nil || o.FastaFilter == nil {
		var ret []string
		return ret
	}
	return *o.FastaFilter
}

// GetFastaFilterOk returns a tuple with the FastaFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequest) GetFastaFilterOk() (*[]string, bool) {
	if o == nil || o.FastaFilter == nil {
		return nil, false
	}
	return o.FastaFilter, true
}

// HasFastaFilter returns a boolean if a field has been set.
func (o *V1GeneDatasetRequest) HasFastaFilter() bool {
	if o != nil && o.FastaFilter != nil {
		return true
	}

	return false
}

// SetFastaFilter gets a reference to the given []string and assigns it to the FastaFilter field.
func (o *V1GeneDatasetRequest) SetFastaFilter(v []string) {
	o.FastaFilter = &v
}

func (o V1GeneDatasetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GeneIds != nil && len(o.GetGeneIds()) > 0  {
		toSerialize["gene_ids"] = o.GeneIds
	}
	if o.Accessions != nil && len(o.GetAccessions()) > 0  {
		toSerialize["accessions"] = o.Accessions
	}
	if o.SymbolsForTaxon != nil  {
		toSerialize["symbols_for_taxon"] = o.SymbolsForTaxon
	}
	if o.Taxon != nil  {
		toSerialize["taxon"] = o.Taxon
	}
	if o.IncludeAnnotationType != nil && len(o.GetIncludeAnnotationType()) > 0  {
		toSerialize["include_annotation_type"] = o.IncludeAnnotationType
	}
	if o.ReturnedContent != nil  {
		toSerialize["returned_content"] = o.ReturnedContent
	}
	if o.SortSchema != nil  {
		toSerialize["sort_schema"] = o.SortSchema
	}
	if o.Limit != nil  {
		toSerialize["limit"] = o.Limit
	}
	if o.FastaFilter != nil && len(o.GetFastaFilter()) > 0  {
		toSerialize["fasta_filter"] = o.FastaFilter
	}
	return json.Marshal(toSerialize)
}

type NullableV1GeneDatasetRequest struct {
	value *V1GeneDatasetRequest
	isSet bool
}

func (v NullableV1GeneDatasetRequest) Get() *V1GeneDatasetRequest {
	return v.value
}

func (v *NullableV1GeneDatasetRequest) Set(val *V1GeneDatasetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GeneDatasetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GeneDatasetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GeneDatasetRequest(val *V1GeneDatasetRequest) *NullableV1GeneDatasetRequest {
	return &NullableV1GeneDatasetRequest{value: val, isSet: true}
}

func (v NullableV1GeneDatasetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GeneDatasetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



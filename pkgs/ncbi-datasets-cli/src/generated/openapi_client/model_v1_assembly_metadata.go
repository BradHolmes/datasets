/*
 * NCBI Datasets API
 *
 * ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1AssemblyMetadata struct for V1AssemblyMetadata
type V1AssemblyMetadata struct {
	Messages *[]V1Message `json:"messages,omitempty"`
	Assemblies *[]V1AssemblyMatch `json:"assemblies,omitempty"`
	TotalCount *int32 `json:"total_count,omitempty"`
	NextPageToken *string `json:"next_page_token,omitempty"`
}

// NewV1AssemblyMetadata instantiates a new V1AssemblyMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AssemblyMetadata() *V1AssemblyMetadata {
	this := V1AssemblyMetadata{}
	return &this
}

// NewV1AssemblyMetadataWithDefaults instantiates a new V1AssemblyMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AssemblyMetadataWithDefaults() *V1AssemblyMetadata {
	this := V1AssemblyMetadata{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *V1AssemblyMetadata) GetMessages() []V1Message {
	if o == nil || o.Messages == nil {
		var ret []V1Message
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AssemblyMetadata) GetMessagesOk() (*[]V1Message, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *V1AssemblyMetadata) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []V1Message and assigns it to the Messages field.
func (o *V1AssemblyMetadata) SetMessages(v []V1Message) {
	o.Messages = &v
}

// GetAssemblies returns the Assemblies field value if set, zero value otherwise.
func (o *V1AssemblyMetadata) GetAssemblies() []V1AssemblyMatch {
	if o == nil || o.Assemblies == nil {
		var ret []V1AssemblyMatch
		return ret
	}
	return *o.Assemblies
}

// GetAssembliesOk returns a tuple with the Assemblies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AssemblyMetadata) GetAssembliesOk() (*[]V1AssemblyMatch, bool) {
	if o == nil || o.Assemblies == nil {
		return nil, false
	}
	return o.Assemblies, true
}

// HasAssemblies returns a boolean if a field has been set.
func (o *V1AssemblyMetadata) HasAssemblies() bool {
	if o != nil && o.Assemblies != nil {
		return true
	}

	return false
}

// SetAssemblies gets a reference to the given []V1AssemblyMatch and assigns it to the Assemblies field.
func (o *V1AssemblyMetadata) SetAssemblies(v []V1AssemblyMatch) {
	o.Assemblies = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *V1AssemblyMetadata) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AssemblyMetadata) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *V1AssemblyMetadata) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *V1AssemblyMetadata) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *V1AssemblyMetadata) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AssemblyMetadata) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *V1AssemblyMetadata) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *V1AssemblyMetadata) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o V1AssemblyMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Messages != nil && len(o.GetMessages()) > 0  {
		toSerialize["messages"] = o.Messages
	}
	if o.Assemblies != nil && len(o.GetAssemblies()) > 0  {
		toSerialize["assemblies"] = o.Assemblies
	}
	if o.TotalCount != nil  {
		toSerialize["total_count"] = o.TotalCount
	}
	if o.NextPageToken != nil  {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	return json.Marshal(toSerialize)
}

type NullableV1AssemblyMetadata struct {
	value *V1AssemblyMetadata
	isSet bool
}

func (v NullableV1AssemblyMetadata) Get() *V1AssemblyMetadata {
	return v.value
}

func (v *NullableV1AssemblyMetadata) Set(val *V1AssemblyMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AssemblyMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AssemblyMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AssemblyMetadata(val *V1AssemblyMetadata) *NullableV1AssemblyMetadata {
	return &NullableV1AssemblyMetadata{value: val, isSet: true}
}

func (v NullableV1AssemblyMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AssemblyMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



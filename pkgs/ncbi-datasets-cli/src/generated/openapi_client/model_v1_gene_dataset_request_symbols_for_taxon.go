/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated bag](https://www.ncbi.nlm.nih.gov/datasets/docs/rehydrate/), and retrieve the individual data files at a later time. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datasets

import (
	"encoding/json"
)

// V1GeneDatasetRequestSymbolsForTaxon struct for V1GeneDatasetRequestSymbolsForTaxon
type V1GeneDatasetRequestSymbolsForTaxon struct {
	Symbols *[]string `json:"symbols,omitempty"`
	Taxon *string `json:"taxon,omitempty"`
}

// NewV1GeneDatasetRequestSymbolsForTaxon instantiates a new V1GeneDatasetRequestSymbolsForTaxon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GeneDatasetRequestSymbolsForTaxon() *V1GeneDatasetRequestSymbolsForTaxon {
	this := V1GeneDatasetRequestSymbolsForTaxon{}
	return &this
}

// NewV1GeneDatasetRequestSymbolsForTaxonWithDefaults instantiates a new V1GeneDatasetRequestSymbolsForTaxon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GeneDatasetRequestSymbolsForTaxonWithDefaults() *V1GeneDatasetRequestSymbolsForTaxon {
	this := V1GeneDatasetRequestSymbolsForTaxon{}
	return &this
}

// GetSymbols returns the Symbols field value if set, zero value otherwise.
func (o *V1GeneDatasetRequestSymbolsForTaxon) GetSymbols() []string {
	if o == nil || o.Symbols == nil {
		var ret []string
		return ret
	}
	return *o.Symbols
}

// GetSymbolsOk returns a tuple with the Symbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequestSymbolsForTaxon) GetSymbolsOk() (*[]string, bool) {
	if o == nil || o.Symbols == nil {
		return nil, false
	}
	return o.Symbols, true
}

// HasSymbols returns a boolean if a field has been set.
func (o *V1GeneDatasetRequestSymbolsForTaxon) HasSymbols() bool {
	if o != nil && o.Symbols != nil {
		return true
	}

	return false
}

// SetSymbols gets a reference to the given []string and assigns it to the Symbols field.
func (o *V1GeneDatasetRequestSymbolsForTaxon) SetSymbols(v []string) {
	o.Symbols = &v
}

// GetTaxon returns the Taxon field value if set, zero value otherwise.
func (o *V1GeneDatasetRequestSymbolsForTaxon) GetTaxon() string {
	if o == nil || o.Taxon == nil {
		var ret string
		return ret
	}
	return *o.Taxon
}

// GetTaxonOk returns a tuple with the Taxon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GeneDatasetRequestSymbolsForTaxon) GetTaxonOk() (*string, bool) {
	if o == nil || o.Taxon == nil {
		return nil, false
	}
	return o.Taxon, true
}

// HasTaxon returns a boolean if a field has been set.
func (o *V1GeneDatasetRequestSymbolsForTaxon) HasTaxon() bool {
	if o != nil && o.Taxon != nil {
		return true
	}

	return false
}

// SetTaxon gets a reference to the given string and assigns it to the Taxon field.
func (o *V1GeneDatasetRequestSymbolsForTaxon) SetTaxon(v string) {
	o.Taxon = &v
}

func (o V1GeneDatasetRequestSymbolsForTaxon) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbols != nil && len(o.GetSymbols()) > 0  {
		toSerialize["symbols"] = o.Symbols
	}
	if o.Taxon != nil  {
		toSerialize["taxon"] = o.Taxon
	}
	return json.Marshal(toSerialize)
}

type NullableV1GeneDatasetRequestSymbolsForTaxon struct {
	value *V1GeneDatasetRequestSymbolsForTaxon
	isSet bool
}

func (v NullableV1GeneDatasetRequestSymbolsForTaxon) Get() *V1GeneDatasetRequestSymbolsForTaxon {
	return v.value
}

func (v *NullableV1GeneDatasetRequestSymbolsForTaxon) Set(val *V1GeneDatasetRequestSymbolsForTaxon) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GeneDatasetRequestSymbolsForTaxon) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GeneDatasetRequestSymbolsForTaxon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GeneDatasetRequestSymbolsForTaxon(val *V1GeneDatasetRequestSymbolsForTaxon) *NullableV1GeneDatasetRequestSymbolsForTaxon {
	return &NullableV1GeneDatasetRequestSymbolsForTaxon{value: val, isSet: true}
}

func (v NullableV1GeneDatasetRequestSymbolsForTaxon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GeneDatasetRequestSymbolsForTaxon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



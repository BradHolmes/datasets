// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.2
// source: ncbi/datasets/v1alpha1/reports/options.proto

package reports

import (
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Documentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportName     string   `protobuf:"bytes,1,opt,name=report_name,json=reportName,proto3" json:"report_name,omitempty"`
	PrimaryMessage string   `protobuf:"bytes,2,opt,name=primary_message,json=primaryMessage,proto3" json:"primary_message,omitempty"`
	Content        []string `protobuf:"bytes,3,rep,name=content,proto3" json:"content,omitempty"`
	ElidedMessages []string `protobuf:"bytes,4,rep,name=elided_messages,json=elidedMessages,proto3" json:"elided_messages,omitempty"`
	ExampleJson    string   `protobuf:"bytes,5,opt,name=example_json,json=exampleJson,proto3" json:"example_json,omitempty"`
}

func (x *Documentation) Reset() {
	*x = Documentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Documentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Documentation) ProtoMessage() {}

func (x *Documentation) ProtoReflect() protoreflect.Message {
	mi := &file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Documentation.ProtoReflect.Descriptor instead.
func (*Documentation) Descriptor() ([]byte, []int) {
	return file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescGZIP(), []int{0}
}

func (x *Documentation) GetReportName() string {
	if x != nil {
		return x.ReportName
	}
	return ""
}

func (x *Documentation) GetPrimaryMessage() string {
	if x != nil {
		return x.PrimaryMessage
	}
	return ""
}

func (x *Documentation) GetContent() []string {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Documentation) GetElidedMessages() []string {
	if x != nil {
		return x.ElidedMessages
	}
	return nil
}

func (x *Documentation) GetExampleJson() string {
	if x != nil {
		return x.ExampleJson
	}
	return ""
}

// Field Options related to tabular output formats
type TabularOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set the short field name, which must follow common identifier naming constraints in programming languages eg. alpha char followed by alphanumeric/hyphen/underscore
	Mnemonic string `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	// Ascribe the full field name, may contain spaces but not commas or tabs
	ColumnName string `protobuf:"bytes,2,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	// Set the description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Set the types of the value
	GolangType string   `protobuf:"bytes,4,opt,name=golang_type,json=golangType,proto3" json:"golang_type,omitempty"`
	ExcelType  string   `protobuf:"bytes,5,opt,name=excel_type,json=excelType,proto3" json:"excel_type,omitempty"`
	Examples   []string `protobuf:"bytes,6,rep,name=examples,proto3" json:"examples,omitempty"`
}

func (x *TabularOptions) Reset() {
	*x = TabularOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabularOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabularOptions) ProtoMessage() {}

func (x *TabularOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabularOptions.ProtoReflect.Descriptor instead.
func (*TabularOptions) Descriptor() ([]byte, []int) {
	return file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescGZIP(), []int{1}
}

func (x *TabularOptions) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *TabularOptions) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *TabularOptions) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TabularOptions) GetGolangType() string {
	if x != nil {
		return x.GolangType
	}
	return ""
}

func (x *TabularOptions) GetExcelType() string {
	if x != nil {
		return x.ExcelType
	}
	return ""
}

func (x *TabularOptions) GetExamples() []string {
	if x != nil {
		return x.Examples
	}
	return nil
}

// Field Options related to tabular output formats
type FastaOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set the short field name, which must follow common identifier naming constraints in programming languages eg. alpha char followed by alphanumeric/hyphen/underscore
	FieldName   FastaFieldNames `protobuf:"varint,1,opt,name=field_name,json=fieldName,proto3,enum=ncbi.datasets.v1alpha1.reports.FastaFieldNames" json:"field_name,omitempty"`
	Description string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// If this field should be ahead of key/value pairs, on its own.
	LeaderField bool `protobuf:"varint,3,opt,name=leader_field,json=leaderField,proto3" json:"leader_field,omitempty"`
}

func (x *FastaOptions) Reset() {
	*x = FastaOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FastaOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FastaOptions) ProtoMessage() {}

func (x *FastaOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FastaOptions.ProtoReflect.Descriptor instead.
func (*FastaOptions) Descriptor() ([]byte, []int) {
	return file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescGZIP(), []int{2}
}

func (x *FastaOptions) GetFieldName() FastaFieldNames {
	if x != nil {
		return x.FieldName
	}
	return FastaFieldNames_ORGANISM
}

func (x *FastaOptions) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FastaOptions) GetLeaderField() bool {
	if x != nil {
		return x.LeaderField
	}
	return false
}

type SolrOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName   string `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SolrOptions) Reset() {
	*x = SolrOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolrOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolrOptions) ProtoMessage() {}

func (x *SolrOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolrOptions.ProtoReflect.Descriptor instead.
func (*SolrOptions) Descriptor() ([]byte, []int) {
	return file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescGZIP(), []int{3}
}

func (x *SolrOptions) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *SolrOptions) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var file_ncbi_datasets_v1alpha1_reports_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.FileOptions)(nil),
		ExtensionType: (*Documentation)(nil),
		Field:         51000,
		Name:          "ncbi.datasets.v1alpha1.reports.report_docs",
		Tag:           "bytes,51000,opt,name=report_docs",
		Filename:      "ncbi/datasets/v1alpha1/reports/options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*TabularOptions)(nil),
		Field:         51000,
		Name:          "ncbi.datasets.v1alpha1.reports.tabular",
		Tag:           "bytes,51000,opt,name=tabular",
		Filename:      "ncbi/datasets/v1alpha1/reports/options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*FastaOptions)(nil),
		Field:         51001,
		Name:          "ncbi.datasets.v1alpha1.reports.fasta",
		Tag:           "bytes,51001,opt,name=fasta",
		Filename:      "ncbi/datasets/v1alpha1/reports/options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*SolrOptions)(nil),
		Field:         51002,
		Name:          "ncbi.datasets.v1alpha1.reports.solr",
		Tag:           "bytes,51002,opt,name=solr",
		Filename:      "ncbi/datasets/v1alpha1/reports/options.proto",
	},
}

// Extension fields to descriptor.FileOptions.
var (
	// optional ncbi.datasets.v1alpha1.reports.Documentation report_docs = 51000;
	E_ReportDocs = &file_ncbi_datasets_v1alpha1_reports_options_proto_extTypes[0]
)

// Extension fields to descriptor.FieldOptions.
var (
	// optional ncbi.datasets.v1alpha1.reports.TabularOptions tabular = 51000;
	E_Tabular = &file_ncbi_datasets_v1alpha1_reports_options_proto_extTypes[1]
	// optional ncbi.datasets.v1alpha1.reports.FastaOptions fasta = 51001;
	E_Fasta = &file_ncbi_datasets_v1alpha1_reports_options_proto_extTypes[2]
	// optional ncbi.datasets.v1alpha1.reports.SolrOptions solr = 51002;
	E_Solr = &file_ncbi_datasets_v1alpha1_reports_options_proto_extTypes[3]
)

var File_ncbi_datasets_v1alpha1_reports_options_proto protoreflect.FileDescriptor

var file_ncbi_datasets_v1alpha1_reports_options_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6e, 0x63, 0x62, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e,
	0x6e, 0x63, 0x62, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2a, 0x6e, 0x63, 0x62, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2f, 0x66, 0x61, 0x73, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x01, 0x0a,
	0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6c, 0x69, 0x64, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6c, 0x69,
	0x64, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0xcb,
	0x01, 0x0a, 0x0e, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a,
	0x0c, 0x46, 0x61, 0x73, 0x74, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e, 0x0a,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2f, 0x2e, 0x6e, 0x63, 0x62, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x46, 0x61, 0x73, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0x4e, 0x0a, 0x0b, 0x53, 0x6f, 0x6c, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x6e, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x6f, 0x63,
	0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb8, 0x8e, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x63, 0x62, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f,
	0x63, 0x73, 0x3a, 0x69, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb8, 0x8e, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x63, 0x62, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x74, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x3a, 0x63, 0x0a,
	0x05, 0x66, 0x61, 0x73, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb9, 0x8e, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6e, 0x63, 0x62, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x46,
	0x61, 0x73, 0x74, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x66, 0x61, 0x73,
	0x74, 0x61, 0x3a, 0x60, 0x0a, 0x04, 0x73, 0x6f, 0x6c, 0x72, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xba, 0x8e, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x63, 0x62, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x53, 0x6f, 0x6c, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04,
	0x73, 0x6f, 0x6c, 0x72, 0x42, 0x23, 0x5a, 0x1e, 0x6e, 0x63, 0x62, 0x69, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescOnce sync.Once
	file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescData = file_ncbi_datasets_v1alpha1_reports_options_proto_rawDesc
)

func file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescGZIP() []byte {
	file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescOnce.Do(func() {
		file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescData)
	})
	return file_ncbi_datasets_v1alpha1_reports_options_proto_rawDescData
}

var file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ncbi_datasets_v1alpha1_reports_options_proto_goTypes = []interface{}{
	(*Documentation)(nil),           // 0: ncbi.datasets.v1alpha1.reports.Documentation
	(*TabularOptions)(nil),          // 1: ncbi.datasets.v1alpha1.reports.TabularOptions
	(*FastaOptions)(nil),            // 2: ncbi.datasets.v1alpha1.reports.FastaOptions
	(*SolrOptions)(nil),             // 3: ncbi.datasets.v1alpha1.reports.SolrOptions
	(FastaFieldNames)(0),            // 4: ncbi.datasets.v1alpha1.reports.FastaFieldNames
	(*descriptor.FileOptions)(nil),  // 5: google.protobuf.FileOptions
	(*descriptor.FieldOptions)(nil), // 6: google.protobuf.FieldOptions
}
var file_ncbi_datasets_v1alpha1_reports_options_proto_depIdxs = []int32{
	4, // 0: ncbi.datasets.v1alpha1.reports.FastaOptions.field_name:type_name -> ncbi.datasets.v1alpha1.reports.FastaFieldNames
	5, // 1: ncbi.datasets.v1alpha1.reports.report_docs:extendee -> google.protobuf.FileOptions
	6, // 2: ncbi.datasets.v1alpha1.reports.tabular:extendee -> google.protobuf.FieldOptions
	6, // 3: ncbi.datasets.v1alpha1.reports.fasta:extendee -> google.protobuf.FieldOptions
	6, // 4: ncbi.datasets.v1alpha1.reports.solr:extendee -> google.protobuf.FieldOptions
	0, // 5: ncbi.datasets.v1alpha1.reports.report_docs:type_name -> ncbi.datasets.v1alpha1.reports.Documentation
	1, // 6: ncbi.datasets.v1alpha1.reports.tabular:type_name -> ncbi.datasets.v1alpha1.reports.TabularOptions
	2, // 7: ncbi.datasets.v1alpha1.reports.fasta:type_name -> ncbi.datasets.v1alpha1.reports.FastaOptions
	3, // 8: ncbi.datasets.v1alpha1.reports.solr:type_name -> ncbi.datasets.v1alpha1.reports.SolrOptions
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	5, // [5:9] is the sub-list for extension type_name
	1, // [1:5] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ncbi_datasets_v1alpha1_reports_options_proto_init() }
func file_ncbi_datasets_v1alpha1_reports_options_proto_init() {
	if File_ncbi_datasets_v1alpha1_reports_options_proto != nil {
		return
	}
	file_ncbi_datasets_v1alpha1_reports_fasta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Documentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabularOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FastaOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolrOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ncbi_datasets_v1alpha1_reports_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_ncbi_datasets_v1alpha1_reports_options_proto_goTypes,
		DependencyIndexes: file_ncbi_datasets_v1alpha1_reports_options_proto_depIdxs,
		MessageInfos:      file_ncbi_datasets_v1alpha1_reports_options_proto_msgTypes,
		ExtensionInfos:    file_ncbi_datasets_v1alpha1_reports_options_proto_extTypes,
	}.Build()
	File_ncbi_datasets_v1alpha1_reports_options_proto = out.File
	file_ncbi_datasets_v1alpha1_reports_options_proto_rawDesc = nil
	file_ncbi_datasets_v1alpha1_reports_options_proto_goTypes = nil
	file_ncbi_datasets_v1alpha1_reports_options_proto_depIdxs = nil
}
